[{"path":"https://rsetienne.github.io/secsse/articles/complete_tree.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Using secsse with complete phylogenies (with extinction)","text":"current studies evolutionary dynamics make use molecular phylogenies, , groups, contain information extant species. However, data extinct species available, usually presence fossil data, can use complete trees. Thus, can leverage data extinct lineages maximum-likelihood estimation secsse. Note “complete tree” taken complete sampling fraction, , known species present phylogeny missing data, rather assumption currently extinct species included. follows nomenclature Nee et al. (1994), also coined term “reconstructed tree” phylogenies information extinct lineages.","code":""},{"path":"https://rsetienne.github.io/secsse/articles/complete_tree.html","id":"set-up","dir":"Articles","previous_headings":"","what":"Set-up","title":"Using secsse with complete phylogenies (with extinction)","text":"Like ML analyses secsse, first need things start , starting dated phylogeny. purpose vignette, going simulate phylogenies secsse_sim(). simulate reconstructed complete version tree CR model. order simulate trees, need specify model set starting parameters. simulate similar constant rate (CR) example Simulating secsse vignette. details model full details functionality secsse_sim(), see vignette(\"sim_with_secsse\", package = \"secsse\").","code":"library(secsse)  spec_matrix <- c() spec_matrix <- rbind(spec_matrix, c(0, 0, 0, 1)) spec_matrix <- rbind(spec_matrix, c(1, 1, 1, 1)) lambda_list <- secsse::create_lambda_list(state_names = c(0, 1),                                           num_concealed_states = 2,                                           transition_matrix = spec_matrix,                                           model = \"CR\")  mu_vector <- secsse::create_mu_vector(state_names = c(0, 1),                                       num_concealed_states = 2,                                       model = \"CR\",                                       lambda_list = lambda_list)  shift_matrix <- c() shift_matrix <- rbind(shift_matrix, c(0, 1, 3)) shift_matrix <- rbind(shift_matrix, c(1, 0, 4))  q_matrix <- secsse::create_q_matrix(state_names = c(0, 1),                                     num_concealed_states = 2,                                     shift_matrix = shift_matrix,                                     diff.conceal = FALSE)  # Set-up starting parameters speciation_rate <- 0.8 extinction_rate <- 0.2 q_01 <- 0.1 q_10 <- 0.1 used_params <- c(speciation_rate, extinction_rate, q_01, q_10)  sim_lambda_list <- secsse::fill_in(lambda_list, used_params) sim_mu_vector   <- secsse::fill_in(mu_vector, used_params) sim_q_matrix    <- secsse::fill_in(q_matrix, used_params)  # Simulate and plot the tree  sim_tree_complete <- secsse::secsse_sim(lambdas = sim_lambda_list,                                         mus = sim_mu_vector,                                         qs = sim_q_matrix,                                         crown_age = 5,                                         num_concealed_states = 2,                                         seed = 40,                                         drop_extinct = FALSE)  if (requireNamespace(\"diversitree\")) {   traits_for_plot_complete <- data.frame(     trait = as.numeric(sim_tree_complete$obs_traits),     row.names = sim_tree_complete$phy$tip.label   )   diversitree::trait.plot(tree = sim_tree_complete$phy,                           dat = traits_for_plot_complete,                           cols = list(\"trait\" = c(\"blue\", \"red\")),                           type = \"p\") } else {   plot(sim_tree_complete$phy) } #> Loading required namespace: diversitree"},{"path":"https://rsetienne.github.io/secsse/articles/complete_tree.html","id":"fitting-the-model","dir":"Articles","previous_headings":"","what":"Fitting the model","title":"Using secsse with complete phylogenies (with extinction)","text":"Finally, run secsse_ml() complete tree, much way one extant species. However, time make sure set is_complete_tree argument TRUE (defaults FALSE omitted). enables secsse use information present extinct lineages. Now can see results look like.","code":"idparsopt <- 1:4 # our maximum rate parameter was 4 -> We are keeping # concealed and examined traits the same for the MLE. idparsfix <- c(0) # we want to keep all zeros at zero initparsopt <- rep(0.1, 4) initparsfix <- c(0.0) # all zeros remain at zero. sampling_fraction <- c(1, 1)  idparslist <- list() idparslist[[1]] <- lambda_list idparslist[[2]] <- mu_vector idparslist[[3]] <- q_matrix  complete_tree_ml_CR <- secsse_ml(phy = sim_tree_complete$phy,                                  traits = sim_tree_complete$obs_traits,                                  num_concealed_states = 2,                                  idparslist = idparslist,                                  idparsopt = idparsopt,                                  initparsopt = initparsopt,                                  idparsfix = idparsfix,                                  parsfix = initparsfix,                                  sampling_fraction = sampling_fraction,                                  verbose = FALSE) #> Warning in check_ml_conditions(traits, idparslist, initparsopt, idparsopt, : #> Note: you set some transitions as impossible to happen. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. CR_par_complete <- secsse::extract_par_vals(idparslist, complete_tree_ml_CR$MLpars) complete_tree_ml_CR #> $MLpars #> $MLpars[[1]] #> $MLpars[[1]][[1]] #>          0A 1A 0B 1B #> 0A 1.105124  0  0  0 #> 1A 0.000000  0  0  0 #> 0B 0.000000  0  0  0 #> 1B 0.000000  0  0  0 #>  #> $MLpars[[1]][[2]] #>    0A       1A 0B 1B #> 0A  0 0.000000  0  0 #> 1A  0 1.105124  0  0 #> 0B  0 0.000000  0  0 #> 1B  0 0.000000  0  0 #>  #> $MLpars[[1]][[3]] #>    0A 1A       0B 1B #> 0A  0  0 0.000000  0 #> 1A  0  0 0.000000  0 #> 0B  0  0 1.105124  0 #> 1B  0  0 0.000000  0 #>  #> $MLpars[[1]][[4]] #>    0A 1A 0B       1B #> 0A  0  0  0 0.000000 #> 1A  0  0  0 0.000000 #> 0B  0  0  0 0.000000 #> 1B  0  0  0 1.105124 #>  #>  #> $MLpars[[2]] #>       0A       1A       0B       1B  #> 0.546933 0.546933 0.546933 0.546933  #>  #> $MLpars[[3]] #>           0A         1A         0B         1B #> 0A        NA 0.07757695 0.07757695 0.00000000 #> 1A 0.1339091         NA 0.00000000 0.07757695 #> 0B 0.1339091 0.00000000         NA 0.07757695 #> 1B 0.0000000 0.13390910 0.13390910         NA #>  #>  #> $ML #> [1] -182.1902 #>  #> $conv #> [1] 0 CR_par_complete #> [1] 1.10512385 0.54693302 0.07757695 0.13390910 spec_rates_complete <- CR_par_complete[1] ext_rates_complete <- CR_par_complete[2] Q_01_complete <- CR_par_complete[3] Q_10_complete <- CR_par_complete[4] spec_rates_complete #> [1] 1.105124 ext_rates_complete #> [1] 0.546933 Q_01_complete #> [1] 0.07757695 Q_10_complete #> [1] 0.1339091"},{"path":"https://rsetienne.github.io/secsse/articles/complete_tree.html","id":"comparing-with-reconstructed-trees","dir":"Articles","previous_headings":"","what":"Comparing with reconstructed trees","title":"Using secsse with complete phylogenies (with extinction)","text":"interesting see compare tree without extant species. Let’s follow standard procedure using similar phylogeny - tree used - extinct lineages removed. ’ll keep model specification .  see including extinct species results better esimation particularly extinction rate. effect especially noticeable many extinct species present tree. Additionally, see estimation transition rate state 1 0 also improved. final note, note just simple simulation example care exercised model selection specification fitting secsse empirical datasets make predictions evolutionary patterns.","code":"sim_tree_reconstructed <- secsse::secsse_sim(lambdas = sim_lambda_list,                                              mus = sim_mu_vector,                                              qs = sim_q_matrix,                                              crown_age = 5,                                              num_concealed_states = 2,                                              seed = 40,                                              drop_extinct = TRUE)  if (requireNamespace(\"diversitree\")) {   traits_for_plot_reconstructed <- data.frame(     trait = as.numeric(sim_tree_reconstructed$obs_traits),     row.names = sim_tree_reconstructed$phy$tip.label   )   diversitree::trait.plot(tree = sim_tree_reconstructed$phy,                           dat = traits_for_plot_reconstructed,                           cols = list(\"trait\" = c(\"blue\", \"red\")),                           type = \"p\") } else {   plot(sim_tree_reconstructed$phy) } reconstructed_tree_ml <- secsse_ml(phy = sim_tree_reconstructed$phy,                                    traits = sim_tree_reconstructed$obs_traits,                                    num_concealed_states = 2,                                    idparslist = idparslist,                                    idparsopt = idparsopt,                                    initparsopt = initparsopt,                                    idparsfix = idparsfix,                                    parsfix = initparsfix,                                    sampling_fraction = sampling_fraction,                                    verbose = FALSE,                                    is_complete_tree = FALSE) #> Warning in check_ml_conditions(traits, idparslist, initparsopt, idparsopt, : #> Note: you set some transitions as impossible to happen. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. reconstructed_tree_ml_CR <- reconstructed_tree_ml$ML CR_par_reconstructed <- secsse::extract_par_vals(   idparslist,   reconstructed_tree_ml$MLpars ) reconstructed_tree_ml #> $MLpars #> $MLpars[[1]] #> $MLpars[[1]][[1]] #>           0A 1A 0B 1B #> 0A 0.7320932  0  0  0 #> 1A 0.0000000  0  0  0 #> 0B 0.0000000  0  0  0 #> 1B 0.0000000  0  0  0 #>  #> $MLpars[[1]][[2]] #>    0A        1A 0B 1B #> 0A  0 0.0000000  0  0 #> 1A  0 0.7320932  0  0 #> 0B  0 0.0000000  0  0 #> 1B  0 0.0000000  0  0 #>  #> $MLpars[[1]][[3]] #>    0A 1A        0B 1B #> 0A  0  0 0.0000000  0 #> 1A  0  0 0.0000000  0 #> 0B  0  0 0.7320932  0 #> 1B  0  0 0.0000000  0 #>  #> $MLpars[[1]][[4]] #>    0A 1A 0B        1B #> 0A  0  0  0 0.0000000 #> 1A  0  0  0 0.0000000 #> 0B  0  0  0 0.0000000 #> 1B  0  0  0 0.7320932 #>  #>  #> $MLpars[[2]] #>        0A        1A        0B        1B  #> 0.1386054 0.1386054 0.1386054 0.1386054  #>  #> $MLpars[[3]] #>           0A         1A         0B         1B #> 0A        NA 0.09088225 0.09088225 0.00000000 #> 1A 0.1452571         NA 0.00000000 0.09088225 #> 0B 0.1452571 0.00000000         NA 0.09088225 #> 1B 0.0000000 0.14525713 0.14525713         NA #>  #>  #> $ML #> [1] -161.3816 #>  #> $conv #> [1] 0 CR_par_reconstructed #> [1] 0.73209319 0.13860539 0.09088225 0.14525713 spec_rates_reconstructed <- CR_par_reconstructed[1] ext_rates_reconstructed <- CR_par_reconstructed[2] Q_01_reconstructed <- CR_par_reconstructed[3] Q_10_reconstructed <- CR_par_reconstructed[4]  knitr::kable(   data.frame(     Reconstructed_tree = c(       spec_rates_reconstructed,       ext_rates_reconstructed,       Q_01_reconstructed,       Q_10_reconstructed     ),       Complete_tree = c(       spec_rates_complete,       ext_rates_complete,       Q_01_complete,       Q_10_complete     ),     Generating_parameters = c(       speciation_rate,       extinction_rate,       q_01,       q_10     ),     row.names = c(       \"Speciation rate\",       \"Extinction rate\",       \"Transition rate 01\",       \"Transition rate 10\"     )   ) )"},{"path":"https://rsetienne.github.io/secsse/articles/complete_tree.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Using secsse with complete phylogenies (with extinction)","text":"Nee S, May RM, Harvey PH. reconstructed evolutionary process. Philos Trans R Soc Lond B Biol Sci. 1994 May 28;344(1309):305-11. https://doi.org/10.1098/rstb.1994.0068.","code":""},{"path":"https://rsetienne.github.io/secsse/articles/plotting_states.html","id":"plotting-ancestral-states","dir":"Articles","previous_headings":"","what":"Plotting ancestral states","title":"Plotting probabilities","text":", want give short (minimal) demonstration plot ancestral states alongside tree. Let us assume simple tree, almost trivial traits:  typical likelihood calculation look like (assuming 2 observed 2 hidden traits): want visualize change trait probabilities across tree, can use function ‘plot_state_exact’. use function, need provide helper function can translate posterior probabilities single probability interest. instance, 2 observed 2 hidden traits, observe following states reconstructed along nodes: , first four rows indicate tip states, whilst later three rows indicate states internal nodes (last row indicating root, case). columns indicate four extinction four speciation rates, following order params[[1]] params[[2]]. Thus, , rates 0A, 1A, 0B 1B. interested posterior probability trait 0, provide helper function sums probabilities 0A 0B, e.g.: can now use plot probability across tree. two options plotting: using evaluations along branches used integration method, evaluating branch values specific number intervals. Using explicit evaluations precies, might memory heavy. Usually, using 10-100 evaluations per branch provides accurate approximation:","code":"set.seed(5) phy <- ape::rphylo(n = 4, birth = 1, death = 0) traits <- c(0, 1, 1, 0)  plot(phy) params <- secsse::id_paramPos(c(0, 1), 2) params[[1]][] <- c(0.2, 0.2, 0.1, 0.1) params[[2]][] <- 0.0 params[[3]][, ] <- 0.1 diag(params[[3]]) <- NA   ll <- secsse::secsse_loglik(parameter = params,                              phy = phy,                              traits = traits,                              num_concealed_states = 2,                              see_ancestral_states = TRUE,                              sampling_fraction = c(1, 1)) ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ll ## $ancestral_states ##        [,1]      [,2]       [,3]       [,4] ## 7 0.4243298 0.4297629 0.07433059 0.07157672 ## 6 0.1027372 0.6574616 0.03145469 0.20834647 ## 5 0.3253326 0.3253326 0.17466736 0.17466736 ##  ## $LL ## [1] -8.605749 ##  ## $states ##      [,1] [,2] [,3] [,4]      [,5]      [,6]       [,7]       [,8] ## [1,]    0    0    0    0 1.0000000 0.0000000 1.00000000 0.00000000 ## [2,]    0    0    0    0 0.0000000 1.0000000 0.00000000 1.00000000 ## [3,]    0    0    0    0 0.0000000 1.0000000 0.00000000 1.00000000 ## [4,]    0    0    0    0 1.0000000 0.0000000 1.00000000 0.00000000 ## [5,]    0    0    0    0 0.4243298 0.4297629 0.07433059 0.07157672 ## [6,]    0    0    0    0 0.1027372 0.6574616 0.03145469 0.20834647 ## [7,]    0    0    0    0 0.3253326 0.3253326 0.17466736 0.17466736 ll$states ##      [,1] [,2] [,3] [,4]      [,5]      [,6]       [,7]       [,8] ## [1,]    0    0    0    0 1.0000000 0.0000000 1.00000000 0.00000000 ## [2,]    0    0    0    0 0.0000000 1.0000000 0.00000000 1.00000000 ## [3,]    0    0    0    0 0.0000000 1.0000000 0.00000000 1.00000000 ## [4,]    0    0    0    0 1.0000000 0.0000000 1.00000000 0.00000000 ## [5,]    0    0    0    0 0.4243298 0.4297629 0.07433059 0.07157672 ## [6,]    0    0    0    0 0.1027372 0.6574616 0.03145469 0.20834647 ## [7,]    0    0    0    0 0.3253326 0.3253326 0.17466736 0.17466736 helper_function <- function(x) {   return(sum(x[c(5, 7)]) / sum(x)) # normalized by total sum, just in case. } secsse::plot_state_exact(parameters = params,                  phy = phy,                  traits = traits,                  num_concealed_states = 2,                  sampling_fraction = c(1, 1),                  prob_func = helper_function) ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Warning: Removed 6 rows containing missing values or values outside the scale range ## (`geom_segment()`). secsse::plot_state_exact(parameters = params,                  phy = phy,                  traits = traits,                  num_concealed_states = 2,                  sampling_fraction = c(1, 1),                  num_steps = 10,                  prob_func = helper_function) ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Warning: Removed 6 rows containing missing values or values outside the scale range ## (`geom_segment()`). secsse::plot_state_exact(parameters = params,                  phy = phy,                  traits = traits,                  num_concealed_states = 2,                  sampling_fraction = c(1, 1),                  num_steps = 100,                  prob_func = helper_function) ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Warning: Removed 6 rows containing missing values or values outside the scale range ## (`geom_segment()`)."},{"path":"https://rsetienne.github.io/secsse/articles/plotting_states.html","id":"using-cla-secsse","dir":"Articles","previous_headings":"","what":"Using CLA secsse","title":"Plotting probabilities","text":"CLA secsse, similar function available, works way. Borrowing example cla_secsse_loglik, first prepare parameters: , 9 different states (3 observed states, 3 hidden states), ordered regularly, e.g.: 0A, 1A, 2A, 0B, 1B, 2B, 0C, 1C, 2C. observe change state 0, formulate helper function, noticing first 9 states extinction rates: use plotting:","code":"set.seed(13) phylotree <- ape::rcoal(12, tip.label = 1:12) traits <- sample(c(0, 1, 2),                  ape::Ntip(phylotree), replace = TRUE) num_concealed_states <- 3 sampling_fraction <- c(1, 1, 1) phy <- phylotree # the idparlist for a ETD model (dual state inheritance model of evolution) # would be set like this: idparlist <- secsse::cla_id_paramPos(traits, num_concealed_states) lambd_and_modeSpe <- idparlist$lambdas lambd_and_modeSpe[1, ] <- c(1, 1, 1, 2, 2, 2, 3, 3, 3) idparlist[[1]] <- lambd_and_modeSpe idparlist[[2]][] <- 0 masterBlock <- matrix(4, ncol = 3, nrow = 3, byrow = TRUE) diag(masterBlock) <- NA idparlist[[3]] <- q_doubletrans(traits, masterBlock, diff.conceal = FALSE) # Now, internally, clasecsse sorts the lambda matrices, so they look like #  a list with 9 matrices, corresponding to the 9 states # (0A,1A,2A,0B, etc)  parameter <- idparlist lambda_and_modeSpe <- parameter$lambdas lambda_and_modeSpe[1, ] <- c(0.2, 0.2, 0.2, 0.4, 0.4, 0.4, 0.01, 0.01, 0.01) parameter[[1]] <- prepare_full_lambdas(traits, num_concealed_states, lambda_and_modeSpe) parameter[[2]] <- rep(0, 9) masterBlock <- matrix(0.07, ncol = 3, nrow = 3, byrow = TRUE) diag(masterBlock) <- NA parameter[[3]] <- q_doubletrans(traits, masterBlock, diff.conceal = FALSE) helper_function <- function(x) {   return(sum(x[c(10, 13, 16)]) / sum(x)) # normalized by total sum, just in case } secsse::plot_state_exact(parameters = parameter,                          phy = phy,                          traits = traits,                          num_concealed_states = 3,                          sampling_fraction = sampling_fraction,                          cond = \"maddison_cond\",                          root_state_weight = \"maddison_weights\",                          is_complete_tree = FALSE,                          prob_func = helper_function,                          num_steps = 10) ## Warning: Removed 22 rows containing missing values or values outside the scale range ## (`geom_segment()`)."},{"path":[]},{"path":"https://rsetienne.github.io/secsse/articles/secsse_performance.html","id":"section","dir":"Articles","previous_headings":"Secsse Versions","what":"1.0.0","title":"Secsse performance","text":"first version secsse appeared January 2019 CRAN. used package deSolve solve integrations, switch either using fully R based evaluation, use FORTRAN speed calculations. Furthermore, using foreach package, within-R parallelization implemented. However, parallelization situationally improved computation times, generally, computation relatively slow.","code":""},{"path":"https://rsetienne.github.io/secsse/articles/secsse_performance.html","id":"section-1","dir":"Articles","previous_headings":"Secsse Versions","what":"2.0.0","title":"Secsse performance","text":"Version 2.0.0 appeared June 2019 CRAN extended package cla framework, e.g. including state shifts speciation / asymmetric inheritance speciation.","code":""},{"path":"https://rsetienne.github.io/secsse/articles/secsse_performance.html","id":"section-2","dir":"Articles","previous_headings":"Secsse Versions","what":"2.5.0","title":"Secsse performance","text":"Version 2.5.0 appeared 2021 GitHub published May 2023 CRAN. Version 2.5.0 marks first version using C++ perform integration, used tbb (RcppParallel package) perform multithreading. marks ten fold increase speed previous versions.","code":""},{"path":"https://rsetienne.github.io/secsse/articles/secsse_performance.html","id":"section-3","dir":"Articles","previous_headings":"Secsse Versions","what":"2.6.0","title":"Secsse performance","text":"Version 2.6.0 appeared CRAN July 2023, introduced many functions suited prepare parameter structure secsse. also introduced new C++ code base standard likelihood, making smarter use parallelization, marks another 10-fold increase speed.","code":""},{"path":"https://rsetienne.github.io/secsse/articles/secsse_performance.html","id":"section-4","dir":"Articles","previous_headings":"Secsse Versions","what":"3.0.0","title":"Secsse performance","text":"Version 3.0.0 expected arrive CRAN second half 2023. extends C++ code base used standard likelihood cla likelihood, harnessing computation improvement.","code":""},{"path":"https://rsetienne.github.io/secsse/articles/secsse_performance.html","id":"speed","dir":"Articles","previous_headings":"","what":"Speed","title":"Secsse performance","text":"Using standardized computation test calculating likelihood system two observed two concealed traits, tree ~500 tips calculated computation time using either cla standard likelihood. Loading reloading different versions package inevitably requires restarting R clear cache memory avoid using parts code completely unloaded. Hence, actually perform benchmark, load results directly file:  clear come long way since 2019, current versions secsse approximately factor 100 faster. Note cla likelihood, timings available version 1.0.0, version contain cla likelihood versions yet.","code":"load(\"timing_data.RData\")  ggplot(timing_data, aes(x = version, y = time, col = as.factor(num_threads))) +   geom_boxplot() +   scale_y_log10() +   xlab(\"secsse version\") +   ylab(\"Computation time (seconds)\") +   labs(col = \"Number of\\nthreads\") +   theme_classic() +   scale_color_brewer(type = \"qual\", palette = 2) +   facet_wrap(~type)"},{"path":[]},{"path":"https://rsetienne.github.io/secsse/articles/secsse_performance.html","id":"testing-code-standard-likelihood","dir":"Articles","previous_headings":"Appendix","what":"Testing code standard likelihood","title":"Secsse performance","text":"","code":"run_this_code <- FALSE if (run_this_code) {   set.seed(42)   out <- DDD::dd_sim(pars = c(0.5, 0.3, 1000), age = 30)   phy <- out$tes   cat(\"this tree has: \", phy$Nnode + 1, \" tips\\n\")      traits <- sample(c(0, 1), ape::Ntip(phy), replace = TRUE)   b <- c(0.04, 0.04)  # lambda   d <- rep(0.01, 2)   userTransRate <- 0.2 # transition rate among trait states   num_concealed_states <- 2   sampling_fraction <- c(1, 1)   toCheck <- secsse::id_paramPos(traits,num_concealed_states)   toCheck[[1]][] <- b   toCheck[[2]][] <- d   toCheck[[3]][,] <- userTransRate   diag(toCheck[[3]]) <- NA   root_state_weight <- \"proper_weights\"   use_fortran <- TRUE   methode <- \"odeint::bulirsch_stoer\"   cond <- \"noCondit\"      # the different secsse versions have similar, but not identical    # syntax (mainly, they handle multi-threading / parallelization different)   run_secsse_new <- function(nt) {     secsse::secsse_loglik(parameter = toCheck,                           phy = phy,                           traits = traits,                           num_concealed_states = num_concealed_states,                           cond = cond,                           root_state_weight = root_state_weight,                           sampling_fraction = sampling_fraction,                           num_threads = nt,                           is_complete_tree = FALSE)   }      run_secsse_old <- function(use_parallel) {     secsse::secsse_loglik(parameter = toCheck,                           phy = phy,                           traits = traits,                           num_concealed_states =                              num_concealed_states,                           sampling_fraction = sampling_fraction,                           run_parallel = use_parallel)   }      measure_time <- function(local_fun, num_repl, parallel) {     vv <- c()     for (r in 1:num_repl) {       t1 <- Sys.time()       local_fun(parallel)       t2 <- Sys.time()       vv[r] <- difftime(t2, t1, units = \"secs\")     }     return(vv)   }      if (packageVersion(\"secsse\") < 2.5) {     t1 <- measure_time(run_secsse_old, 10, FALSE)     t2 <- measure_time(run_secsse_old, 10, TRUE)     to_add <- cbind(t1, as.character(packageVersion(\"secsse\")), 1)     to_add2 <- cbind(t2, as.character(packageVersion(\"secsse\")), 2)     timing_data <- rbind(timing_data, to_add, to_add2)   } else {     t1 <- measure_time(run_secsse_new, 10, 1)     t2 <- measure_time(run_secsse_new, 10, 2)     t3 <- measure_time(run_secsse_new, 10, 8)     to_add <- cbind(t1, as.character(packageVersion(\"secsse\")), 1)     to_add2 <- cbind(t2, as.character(packageVersion(\"secsse\")), 2)     to_add3 <- cbind(t3, as.character(packageVersion(\"secsse\")), 8)     timing_data <- rbind(timing_data, to_add, to_add2, to_add3)   } }"},{"path":"https://rsetienne.github.io/secsse/articles/secsse_performance.html","id":"testing-code-cla-likelihood","dir":"Articles","previous_headings":"Appendix","what":"Testing code Cla likelihood","title":"Secsse performance","text":"","code":"run_code <- FALSE if (run_code) {   set.seed(42)   #set.seed(51)   out <- DDD::dd_sim(pars = c(0.5 , 0.3, 1000), age = 30)   phy <- out$tes   cat(\"this tree has: \", phy$Nnode + 1, \" tips and \", phy$Nnode, \" internal nodes\\n\")      num_concealed_states <- 3      traits <- sample(c(0,1, 2), ape::Ntip(phy),replace = TRUE)      sampling_fraction = c(1, 1, 1)   idparlist <- cla_id_paramPos(traits, num_concealed_states)   lambda_and_modeSpe <- idparlist$lambdas   lambda_and_modeSpe[1,] <- c(0.2, 0.2, 0.2, 0.4, 0.4, 0.4, 0.01, 0.01, 0.01)      parameter <- list()   parameter[[1]] <- prepare_full_lambdas(traits, num_concealed_states,                                          lambda_and_modeSpe)      parameter[[2]] <- rep(0.05,9)      masterBlock <- matrix(0.07, ncol = 3, nrow = 3, byrow = TRUE)   diag(masterBlock) <- NA   parameter[[3]] <- q_doubletrans(traits, masterBlock, diff.conceal = FALSE)      run_secsse_new <- function(nt) {     secsse::cla_secsse_loglik(parameter = parameter,                               phy = phy,                               traits = traits,                               num_concealed_states = num_concealed_states,                               sampling_fraction = sampling_fraction,                               is_complete_tree = FALSE,                               num_threads = nt,                               atol = 1e-8,                               rtol = 1e-6)   }      run_secsse_old <- function(use_parallel) {     secsse::cla_secsse_loglik(parameter = parameter,                               phy = phy,                               traits = traits,                               num_concealed_states =                                  num_concealed_states,                               sampling_fraction = sampling_fraction,                               run_parallel = use_parallel)   }      measure_time <- function(local_fun, num_repl, parallel) {     vv <- c()     for (r in 1:num_repl) {       t1 <- Sys.time()       local_fun(parallel)       t2 <- Sys.time()       vv[r] <- difftime(t2, t1, units = \"secs\")     }     return(vv)   }      if (packageVersion(\"secsse\") < 2.5) {     t1 <- measure_time(run_secsse_old, 10, FALSE)     t2 <- measure_time(run_secsse_old, 10, TRUE)     to_add <- cbind(t1, as.character(packageVersion(\"secsse\")), 1)     to_add2 <- cbind(t2, as.character(packageVersion(\"secsse\")), 2)     timing_data <- rbind(timing_data, to_add, to_add2)   } else {     t1 <- measure_time(run_secsse_new, 10, 1)     t2 <- measure_time(run_secsse_new, 10, 2)     t3 <- measure_time(run_secsse_new, 10, 8)     to_add <- cbind(t1, as.character(packageVersion(\"secsse\")), 1)     to_add2 <- cbind(t2, as.character(packageVersion(\"secsse\")), 2)     to_add3 <- cbind(t3, as.character(packageVersion(\"secsse\")), 8)     timing_data <- rbind(timing_data, to_add, to_add2, to_add3)   } }"},{"path":"https://rsetienne.github.io/secsse/articles/sim_with_secsse.html","id":"prep-work","dir":"Articles","previous_headings":"","what":"Prep work","title":"Simulating with secsse","text":"Tree simulation secsse takes similar form performing Maximum Likelihood analysis, e.g. need formulate Lambda List, Mu vector Q matrix, time also need populate actual values.","code":""},{"path":"https://rsetienne.github.io/secsse/articles/sim_with_secsse.html","id":"creating-parameter-structure","dir":"Articles","previous_headings":"Prep work","what":"Creating parameter structure","title":"Simulating with secsse","text":"detailed description Lambda List, Mu vector Q matrix work, refer vignette vignette(\"starting_secsse\", package = \"secsse\"). first simulate using CR model: order secsse able use simulate tree, need provide actual starting parameters. secsse helping function (fil_in()) well! function fill_in() go different objects fill appropriate parameter value used_params vector, e.g. finds 1 rate indicator, enters value position used_params[1], encounters 2 rate indicator, enters value position used_params[2] etc.","code":"spec_matrix <- c(0, 0, 0, 1) spec_matrix <- rbind(spec_matrix, c(1, 1, 1, 1)) lambda_list <- secsse::create_lambda_list(state_names = c(0, 1),                                           num_concealed_states = 2,                                           transition_matrix = spec_matrix,                                           model = \"CR\")  mu_vector <- secsse::create_mu_vector(state_names = c(0, 1),                                    num_concealed_states = 2,                                    model = \"CR\",                                    lambda_list = lambda_list)  shift_matrix <- c(0, 1, 3) shift_matrix <- rbind(shift_matrix, c(1, 0, 4))  q_matrix <- secsse::create_q_matrix(state_names = c(0, 1),                                     num_concealed_states = 2,                                     shift_matrix = shift_matrix,                                     diff.conceal = FALSE) speciation_rate <- 0.5 extinction_rate <- 0.05 q_ab <- 0.1 q_ba <- 0.1 used_params <- c(speciation_rate, extinction_rate, q_ab, q_ba)  sim_lambda_list <- secsse::fill_in(lambda_list, used_params) sim_mu_vector   <- secsse::fill_in(mu_vector, used_params) sim_q_matrix    <- secsse::fill_in(q_matrix, used_params)"},{"path":"https://rsetienne.github.io/secsse/articles/sim_with_secsse.html","id":"simulating","dir":"Articles","previous_headings":"","what":"Simulating","title":"Simulating with secsse","text":"","code":"sim_tree <- secsse::secsse_sim(lambdas = sim_lambda_list,                                mus = sim_mu_vector,                                qs = sim_q_matrix,                                crown_age = 5,                                num_concealed_states = 2,                                seed = 5)  if (requireNamespace(\"diversitree\")) {   traits_for_plot <- data.frame(trait = as.numeric(sim_tree$obs_traits),                                 row.names = sim_tree$phy$tip.label)   diversitree::trait.plot(tree = sim_tree$phy,                           dat = traits_for_plot,                           cols = list(\"trait\" = c(\"blue\", \"red\")),                           type = \"p\") } else {   plot(sim_tree$phy) } ## Loading required namespace: diversitree"},{"path":"https://rsetienne.github.io/secsse/articles/sim_with_secsse.html","id":"conditioning","dir":"Articles","previous_headings":"Simulating","what":"Conditioning","title":"Simulating with secsse","text":"Notice secsse_sim() can simulate tree conditioning different tip-states: either uses conditioning obs_states, case secsse keep simulating simulates tree observed states. usually advised, typically observed states starting point analysis, observed seems unrealistic. Alternatively, secsse can also condition true_states - case secsse try simulate possible combinations observed concealed states present tips: , explored two-state system differences may large, large numbers states, conditioning might yield different trees.","code":"sim_tree <- secsse::secsse_sim(lambdas = sim_lambda_list,                                mus = sim_mu_vector,                                qs = sim_q_matrix,                                crown_age = 5,                                num_concealed_states = 2,                                conditioning = \"obs_states\",                                seed = 6) sim_tree$obs_traits ##  [1] \"1\" \"1\" \"0\" \"0\" \"1\" \"1\" \"1\" \"1\" \"1\" \"1\" \"1\" \"0\" \"1\" \"1\" \"0\" \"0\" \"1\" \"1\" \"1\" ## [20] \"1\" \"1\" \"1\" \"0\" \"1\" \"1\" sim_tree$true_traits ##  [1] \"1B\" \"1A\" \"0B\" \"0A\" \"1B\" \"1B\" \"1B\" \"1B\" \"1B\" \"1B\" \"1B\" \"0B\" \"1B\" \"1B\" \"0A\" ## [16] \"0A\" \"1A\" \"1A\" \"1A\" \"1A\" \"1A\" \"1A\" \"0A\" \"1B\" \"1B\" sim_tree <- secsse::secsse_sim(lambdas = sim_lambda_list,                                mus = sim_mu_vector,                                qs = sim_q_matrix,                                crown_age = 5,                                num_concealed_states = 2,                                conditioning = \"true_states\",                                seed = 6) sim_tree$obs_traits ##  [1] \"1\" \"1\" \"0\" \"0\" \"1\" \"1\" \"1\" \"1\" \"1\" \"1\" \"1\" \"0\" \"1\" \"1\" \"0\" \"0\" \"1\" \"1\" \"1\" ## [20] \"1\" \"1\" \"1\" \"0\" \"1\" \"1\" sim_tree$true_traits ##  [1] \"1B\" \"1A\" \"0B\" \"0A\" \"1B\" \"1B\" \"1B\" \"1B\" \"1B\" \"1B\" \"1B\" \"0B\" \"1B\" \"1B\" \"0A\" ## [16] \"0A\" \"1A\" \"1A\" \"1A\" \"1A\" \"1A\" \"1A\" \"0A\" \"1B\" \"1B\""},{"path":"https://rsetienne.github.io/secsse/articles/starting_secsse.html","id":"secsse-introduction","dir":"Articles","previous_headings":"","what":"Secsse introduction","title":"Starting secsse","text":"secsse R package designed multistate data sets concealed state speciation (‘hisse’) framework. sense, parallel ‘MuSSE’ functionality implemented ‘diversitree’, accounts finding possible spurious relationships traits diversification rates (‘false positives’, Rabosky & Goldberg 2015) testing ‘hidden trait’ (Beaulieu et al. 2013), responsible variation diversification rates trait investigated.","code":""},{"path":"https://rsetienne.github.io/secsse/articles/starting_secsse.html","id":"secsse-input-files","dir":"Articles","previous_headings":"Secsse introduction","what":"Secsse input files","title":"Starting secsse","text":"Similar ‘diversitree’ (Fitzjohn et al. 2012) ‘hisse’ (Beaulieu & O’Meara 2016) packages, secsse uses two input files: rooted, ultrametric tree nexus format (conversion formats nexus, refer documentation package ‘ape’) data file two columns, first containing taxa names second numeric code trait state header (usually 0, 1, 2, 3, etc., notice ‘NA’ valid code , sure trait state assign taxon). , use simple trait dataset values 0 1, indicating presence absence trait. comma-separated value file (.csv) generated MsExcel works particularly well. *.csv file can loaded R using read.csv() function. look like : data set (see bottom lines data frame) two character states labeled 0 1. Ambiguity trait state (sure trait state assign taxon , data trait state particular taxon), can assigned using ‘NA’. secsse handles ‘NA’ differently full trait state, assigns probabilities trait states taxon demarcated ‘NA’. second object need ultrametric phylogenetic tree, rooted labelled tips. One can load R using read.nexus(). example load prepared phylogeny named “phylo_vignette”: running secsse important tree tip labels agree taxon names data file, also order. purpose, run following piece code prior analysis: mismatch number taxa data tree file, receive error message. However, identify taxa causing issues tree data file, can use name.check function ‘geiger’(Harmon et al. 2008) package: taxa tree file appear trait file, worth adding value NA trait state. can visualise tip states using package diversitree:  done properly setting data, can proceed setting parameters constraints.","code":"library(secsse) data(traits) tail(traits) ##     species trait ## t46     t46     1 ## t56     t56     1 ## t7       t7     0 ## t10     t10     0 ## t24     t24     0 ## t4       t4     0 data(\"phylo_vignette\") sorted_traits <- sortingtraits(traits, phylo_vignette) library(geiger) ## Loading required package: ape ## Loading required package: phytools ## Loading required package: maps #pick out all elements that do not agree between tree and data mismat <- name.check(phylo_vignette, traits) #this will call all taxa that are in the tree, but not the data file #mismat$tree_not_data #and conversely, #mismat$data_not_tree if (requireNamespace(\"diversitree\")) {   for_plot <- data.frame(trait = traits$trait,                          row.names = phylo_vignette$tip.label) diversitree::trait.plot(phylo_vignette, dat = for_plot,                         cols = list(\"trait\" = c(\"blue\", \"red\")),                         type = \"p\") } ## Loading required namespace: diversitree"},{"path":"https://rsetienne.github.io/secsse/articles/starting_secsse.html","id":"note-on-assigning-ambiguity-to-taxon-trait-states","dir":"Articles","previous_headings":"Secsse introduction > Secsse input files","what":"Note on assigning ambiguity to taxon trait states","title":"Starting secsse","text":"user wishes assign taxon multiple trait states, /unsure state best describes taxon, /can use NA. NA used information possible state ; example state measured taxon unavailable inspection. NA means taxon equally likely pertain state. case user information, example taxon can pertain multiple states, uncertainty regarding state one multiple states can certainty excluded, secsse offers flexibility handle ambiguity. case, user needs supply trait file, least four columns, one taxon name, three trait state. , show example trait info like (column species’ names removed). taxon may pertain trait state 1 3, 2, three columns least values 1 3, never 2 (species third row). hand, species fifth row can pertain states: first column 1, second 2, third 3 (although type ambiguity, easier assign NA use single-column data file).","code":"#       traits traits traits # [1,]      2      2      2 # [2,]      1      1      1 # [3,]      2      2      2 # [4,]      3      1      1 # [5,]      1      2      3"},{"path":"https://rsetienne.github.io/secsse/articles/starting_secsse.html","id":"setting-up-an-analysis","dir":"Articles","previous_headings":"","what":"Setting up an analysis","title":"Starting secsse","text":"perform Maximum Likelihood analysis, secsse makes use function DDD::optimize(), turn, typically, uses subplex package perform Maximum Likelihood optimization. analysis, need specify parameters want optimize, parameters keep fix, initial values per parameter. providing structure input parameters (e.g. vector, matrix list form), within structure highlight values stay zero 0, parameters inferred indexes 1, 2, … n. optimizer use indexes fill associated parameters perform optimization. seems bit unclear, please continue reading look fully set parameterization maximum likelihood gain insight.","code":""},{"path":"https://rsetienne.github.io/secsse/articles/starting_secsse.html","id":"etd","dir":"Articles","previous_headings":"Setting up an analysis","what":"ETD","title":"Starting secsse","text":"ETD model, assume examined trait affects diversification. secsse analysis need specify structure three distinct properties: lambda list, mu vector transition (Q) matrix. informs properties model speciation, extinction trait-shifts respectively.","code":""},{"path":"https://rsetienne.github.io/secsse/articles/starting_secsse.html","id":"lambda-matrices","dir":"Articles","previous_headings":"Setting up an analysis > ETD","what":"Lambda matrices","title":"Starting secsse","text":"Speciation secsse model defined using list matrices, matrix highlights state daughter species resulting speciation event. case, trait two states, thus specify list two matrices, one state, matrix turn specify daughter states. can hand, secsse includes functionality organized manner - especially useful trait two states instance. organized manner, can provide secsse matrix specifying potential speciation results, secsse construct lambda list accordingly: Let’s see code done. First, create spec_matrix, first column indicates parent species (0 1) second third column indicate identities two daughter species. case, choose symmetric speciation without change trait, e.g. daughters trait parent. evidence perhaps asymmetric inheritance, can specify . fourth column indicates associated rate indicator. case choose two different speciation rates. choose two concealed states, good practice number concealed states observed states. resulting lambda_list contains four entries, one unique state (see names entries list), , combination observed concealed states, concealed states indicated capital letter. Looking first entry list, e.g. result speciation event starting parent state 0A, result rate 1 two daughter species state 0A well. way read , looking row column identifiers entered rate. Similarly, speciation event starting state 1A (lambda_list[[2]]), two daughter species 1A well, time rate 2, specified species trait 1 different speciation rate. Note , rates 1 2 ordered observed trait, later explore CTD model, rates sorted according concealed state.","code":"spec_matrix <- c() spec_matrix <- rbind(spec_matrix, c(0, 0, 0, 1)) spec_matrix <- rbind(spec_matrix, c(1, 1, 1, 2)) lambda_list <- secsse::create_lambda_list(state_names = c(0, 1),                                           num_concealed_states = 2,                                           transition_matrix = spec_matrix,                                           model = \"ETD\") lambda_list ## $`0A` ##    0A 1A 0B 1B ## 0A  1  0  0  0 ## 1A  0  0  0  0 ## 0B  0  0  0  0 ## 1B  0  0  0  0 ##  ## $`1A` ##    0A 1A 0B 1B ## 0A  0  0  0  0 ## 1A  0  2  0  0 ## 0B  0  0  0  0 ## 1B  0  0  0  0 ##  ## $`0B` ##    0A 1A 0B 1B ## 0A  0  0  0  0 ## 1A  0  0  0  0 ## 0B  0  0  1  0 ## 1B  0  0  0  0 ##  ## $`1B` ##    0A 1A 0B 1B ## 0A  0  0  0  0 ## 1A  0  0  0  0 ## 0B  0  0  0  0 ## 1B  0  0  0  2"},{"path":"https://rsetienne.github.io/secsse/articles/starting_secsse.html","id":"mu-vector","dir":"Articles","previous_headings":"Setting up an analysis > ETD","what":"Mu vector","title":"Starting secsse","text":"speciation rates set, can move extinction rates. Since using ETD model, also expect extinction rates different: function create_mus_vector() takes standard information provided earlier, addition previously made lambda_list. uses lambda_list identify rate indicators (case 1 2) already used thus pick new rates. see secsse created named vector two extinction rates (3 4), associated observed traits 0 1.","code":"mu_vec <- secsse::create_mu_vector(state_names = c(0, 1),                                    num_concealed_states = 2,                                    model = \"ETD\",                                    lambda_list = lambda_list) mu_vec ## 0A 1A 0B 1B  ##  3  4  3  4"},{"path":"https://rsetienne.github.io/secsse/articles/starting_secsse.html","id":"transition-matrix","dir":"Articles","previous_headings":"Setting up an analysis > ETD","what":"Transition matrix","title":"Starting secsse","text":"Lastly, need specify transition matrix. Often, Q matrices can get quite large complicated, states analyzing. devised tool easily put together Q matrices. tool starts -called shift_matrix, basic matrix find information transitions examined states. information contained shift_matrix automatically mimicked inclusion full matrix, ensure complexity examined state transitions also found concealed states. Instead specifying entire shift_matrix, instead suffices specify non-zero transitions. case state 0 1, vice versa: Thus, first specify matrix containing potential state transitions, 0->1 1->0. , use create_q_matrix() create q-matrix. setting diff.conceal TRUE, ensure concealed states get rates specified. Setting FALSE set rates equal observed rates (5 6). way read transition matrix column-row, e.g. starting state 0A, rate 5 species shift state 1A rate 7 shift state 0B. intentionally ignore ‘double’ shifts, e.g. 0A 1B, observed concealed trait shift time. good evidence include shifts model, can modify trans_matrix hand course.","code":"shift_matrix <- c() shift_matrix <- rbind(shift_matrix, c(0, 1, 5)) shift_matrix <- rbind(shift_matrix, c(1, 0, 6))  q_matrix <- secsse::create_q_matrix(state_names = c(0, 1),                                     num_concealed_states = 2,                                     shift_matrix = shift_matrix,                                     diff.conceal = TRUE) q_matrix ##    0A 1A 0B 1B ## 0A NA  5  7  0 ## 1A  6 NA  0  7 ## 0B  8  0 NA  5 ## 1B  0  8  6 NA"},{"path":"https://rsetienne.github.io/secsse/articles/starting_secsse.html","id":"maximum-likelihood","dir":"Articles","previous_headings":"Setting up an analysis > ETD","what":"Maximum Likelihood","title":"Starting secsse","text":"now specified required ingredients perform Maximum Likelihood analyses. Prerequisites performing Maximum Likelihood analyses secsse specify ids rates want optimized, provide initial values. can follows: , specify want optimize parameters rates 1, 2, …, 8. set initial values 0.1 parameters. , use one starting point, practice often advisable explore multiple different initial values avoid getting stuck local optimum missing global optimum. idparsfix initparsfix indicate entries zero kept value zero. Lastly, set sampling fraction c(1, 1), indicates secsse sampled per trait species trait dataset. Alternatively, know perhaps species trait 0 missing, specify c(0.8, 1.0). Thus, note sampling fraction add 1 across traits, within traits. now can perform maximum likelihood: can now extract several pieces information returned answer: function extract_par_vals() goes list answ$MLpars places found parameter values back consecutive vector 1:8 case. , find speciation rate trait 1 higher speciation rate trait 0.","code":"idparsopt <- 1:8 # our maximum rate parameter was 8 idparsfix <- c(0) # we want to keep all zeros at zero initparsopt <- rep(0.1, 8) initparsfix <- c(0.0) # all zeros remain at zero. sampling_fraction <- c(1, 1) idparslist <- list() idparslist[[1]] <- lambda_list idparslist[[2]] <- mu_vec idparslist[[3]] <- q_matrix  answ <- secsse::cla_secsse_ml(phy = phylo_vignette,                               traits = traits$trait,                               num_concealed_states = 2,                               idparslist = idparslist,                               idparsopt = idparsopt,                               initparsopt = initparsopt,                               idparsfix = idparsfix,                               parsfix = initparsfix,                               sampling_fraction = sampling_fraction,                               verbose = FALSE) ## Warning in check_ml_conditions(traits, idparslist, initparsopt, idparsopt, : ## Note: you set some transitions as impossible to happen. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ML_ETD <- answ$ML ETD_par <- secsse::extract_par_vals(idparslist, answ$MLpars) ML_ETD ## [1] -96.32138 ETD_par ## [1] 4.429929e-01 8.810607e-01 5.201400e-07 7.764175e-07 7.770646e-02 ## [6] 1.570195e-09 1.410419e-01 6.549122e-02 spec_rates <- ETD_par[1:2] ext_rates <- ETD_par[3:4] Q_Examined <- ETD_par[5:6] Q_Concealed <- ETD_par[7:8] spec_rates ## [1] 0.4429929 0.8810607 ext_rates ## [1] 5.201400e-07 7.764175e-07 Q_Examined ## [1] 7.770646e-02 1.570195e-09 Q_Concealed ## [1] 0.14104187 0.06549122"},{"path":"https://rsetienne.github.io/secsse/articles/starting_secsse.html","id":"ctd","dir":"Articles","previous_headings":"Setting up an analysis","what":"CTD","title":"Starting secsse","text":"Let’s compare findings CTD model, e.g. model centered around concealed trait. , need specify lambda list, mu vector transition matrix. see quite straightforward now gotten hang works.","code":""},{"path":"https://rsetienne.github.io/secsse/articles/starting_secsse.html","id":"lambda-matrices-1","dir":"Articles","previous_headings":"Setting up an analysis > CTD","what":"Lambda matrices","title":"Starting secsse","text":", specify two distinct rates, indicating observed state inherits faithfully daughter species. However, time, set model indicator “CTD”: resulting lambda_list now chosen rates 1 2 sorted differently across matrices, matrices 1 2 containing rate 1, matrices 3 4 containing rate 2. Looking column names matrices, states 1 2 states 0A 1A, states 3 4 states 0B 1B, words, speciation rate 1 now associated states concealed state , speciation rate 2 now associated states concealed state B.","code":"spec_matrix <- c() spec_matrix <- rbind(spec_matrix, c(0, 0, 0, 1)) spec_matrix <- rbind(spec_matrix, c(1, 1, 1, 2)) lambda_list <- secsse::create_lambda_list(state_names = c(0, 1),                                           num_concealed_states = 2,                                           transition_matrix = spec_matrix,                                           model = \"CTD\") lambda_list ## $`0A` ##    0A 1A 0B 1B ## 0A  1  0  0  0 ## 1A  0  0  0  0 ## 0B  0  0  0  0 ## 1B  0  0  0  0 ##  ## $`1A` ##    0A 1A 0B 1B ## 0A  0  0  0  0 ## 1A  0  1  0  0 ## 0B  0  0  0  0 ## 1B  0  0  0  0 ##  ## $`0B` ##    0A 1A 0B 1B ## 0A  0  0  0  0 ## 1A  0  0  0  0 ## 0B  0  0  2  0 ## 1B  0  0  0  0 ##  ## $`1B` ##    0A 1A 0B 1B ## 0A  0  0  0  0 ## 1A  0  0  0  0 ## 0B  0  0  0  0 ## 1B  0  0  0  2"},{"path":"https://rsetienne.github.io/secsse/articles/starting_secsse.html","id":"mu-vector-1","dir":"Articles","previous_headings":"Setting up an analysis > CTD","what":"Mu vector","title":"Starting secsse","text":"mu vector, repeat ETD model: , , see whereas previously extinction rate 3 associated states 0A 0B (e.g. states state 0), now associated states 0A 1A, e.g. states associated concealed state .","code":"mu_vec <- secsse::create_mu_vector(state_names = c(0, 1),                                    num_concealed_states = 2,                                    model = \"CTD\",                                    lambda_list = lambda_list) mu_vec ## 0A 1A 0B 1B  ##  3  3  4  4"},{"path":"https://rsetienne.github.io/secsse/articles/starting_secsse.html","id":"transition-matrix-1","dir":"Articles","previous_headings":"Setting up an analysis > CTD","what":"Transition matrix","title":"Starting secsse","text":"Setting transition matrix different ETD model, transitions possible:","code":"shift_matrix <- c() shift_matrix <- rbind(shift_matrix, c(0, 1, 5)) shift_matrix <- rbind(shift_matrix, c(1, 0, 6))  q_matrix <- secsse::create_q_matrix(state_names = c(0, 1),                                     num_concealed_states = 2,                                     shift_matrix = shift_matrix,                                     diff.conceal = TRUE) q_matrix ##    0A 1A 0B 1B ## 0A NA  5  7  0 ## 1A  6 NA  0  7 ## 0B  8  0 NA  5 ## 1B  0  8  6 NA"},{"path":"https://rsetienne.github.io/secsse/articles/starting_secsse.html","id":"maximum-likelihood-1","dir":"Articles","previous_headings":"Setting up an analysis > CTD","what":"Maximum Likelihood","title":"Starting secsse","text":"Now specified matrices, can use code used ETD model perform maximum likelihood: now find state low speciation rate, contrast much higher speciation rate state B (remember speciation rate 1 now associated , state 0!). Similarly, extinction rates states also quite different, state much lower extinction rate state B. Examined trait shifts (Q_Examined) quite low, whereas concealed trait shifts seem quite high. LogLikelihood seems lower found ETD model.","code":"idparsopt <- 1:8 # our maximum rate parameter was 8 idparsfix <- c(0) # we want to keep all zeros at zero initparsopt <- rep(0.1, 8) initparsfix <- c(0.0) # all zeros remain at zero. sampling_fraction <- c(1, 1)  idparslist <- list() idparslist[[1]] <- lambda_list idparslist[[2]] <- mu_vec idparslist[[3]] <- q_matrix  answ <- secsse::cla_secsse_ml(phy = phylo_vignette,                               traits = traits$trait,                               num_concealed_states = 2,                               idparslist = idparslist,                               idparsopt = idparsopt,                               initparsopt = initparsopt,                               idparsfix = idparsfix,                               parsfix = initparsfix,                               sampling_fraction = sampling_fraction,                               verbose = FALSE) ## Warning in check_ml_conditions(traits, idparslist, initparsopt, idparsopt, : ## Note: you set some transitions as impossible to happen. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ML_CTD <- answ$ML CTD_par <- secsse::extract_par_vals(idparslist, answ$MLpars) ML_CTD ## [1] -99.6419 CTD_par ## [1] 6.994499e-01 3.619384e-02 1.311746e-06 7.003631e-04 7.743895e-02 ## [6] 2.242539e-07 1.978957e+01 1.856686e+03 spec_rates <- CTD_par[1:2] ext_rates <- CTD_par[3:4] Q_Examined <- CTD_par[5:6] Q_Concealed <- CTD_par[7:8] spec_rates ## [1] 0.69944988 0.03619384 ext_rates ## [1] 1.311746e-06 7.003631e-04 Q_Examined ## [1] 7.743895e-02 2.242539e-07 Q_Concealed ## [1]   19.78957 1856.68563"},{"path":"https://rsetienne.github.io/secsse/articles/starting_secsse.html","id":"cr","dir":"Articles","previous_headings":"Setting up an analysis","what":"CR","title":"Starting secsse","text":"check, also fit model trait effect - perhaps looking effect none. always good sanity check.","code":""},{"path":"https://rsetienne.github.io/secsse/articles/starting_secsse.html","id":"lambda-matrices-2","dir":"Articles","previous_headings":"Setting up an analysis > CR","what":"Lambda matrices","title":"Starting secsse","text":"specify lambda matrices, time choose rate indicator across states.","code":"spec_matrix <- c() spec_matrix <- rbind(spec_matrix, c(0, 0, 0, 1)) spec_matrix <- rbind(spec_matrix, c(1, 1, 1, 1)) lambda_list <- secsse::create_lambda_list(state_names = c(0, 1),                                           num_concealed_states = 2,                                           transition_matrix = spec_matrix,                                           model = \"CR\") lambda_list ## $`0A` ##    0A 1A 0B 1B ## 0A  1  0  0  0 ## 1A  0  0  0  0 ## 0B  0  0  0  0 ## 1B  0  0  0  0 ##  ## $`1A` ##    0A 1A 0B 1B ## 0A  0  0  0  0 ## 1A  0  1  0  0 ## 0B  0  0  0  0 ## 1B  0  0  0  0 ##  ## $`0B` ##    0A 1A 0B 1B ## 0A  0  0  0  0 ## 1A  0  0  0  0 ## 0B  0  0  1  0 ## 1B  0  0  0  0 ##  ## $`1B` ##    0A 1A 0B 1B ## 0A  0  0  0  0 ## 1A  0  0  0  0 ## 0B  0  0  0  0 ## 1B  0  0  0  1"},{"path":"https://rsetienne.github.io/secsse/articles/starting_secsse.html","id":"mu-vector-2","dir":"Articles","previous_headings":"Setting up an analysis > CR","what":"Mu vector","title":"Starting secsse","text":"mu vector follows closely , shared extinction rate across states:","code":"mu_vec <- secsse::create_mu_vector(state_names = c(0, 1),                                    num_concealed_states = 2,                                    model = \"CR\",                                    lambda_list = lambda_list) mu_vec ## 0A 1A 0B 1B  ##  2  2  2  2"},{"path":"https://rsetienne.github.io/secsse/articles/starting_secsse.html","id":"transition-matrix-2","dir":"Articles","previous_headings":"Setting up an analysis > CR","what":"Transition matrix","title":"Starting secsse","text":"use transition matrix used , although one perhaps argue without trait effect, rates transition matrix (forward reverse trait shifts) share rate. , choose parameter-rich version (Home assignment: try modify code perform analysis rates transition matrix ).","code":"shift_matrix <- c() shift_matrix <- rbind(shift_matrix, c(0, 1, 3)) shift_matrix <- rbind(shift_matrix, c(1, 0, 4))  q_matrix <- secsse::create_q_matrix(state_names = c(0, 1),                                     num_concealed_states = 2,                                     shift_matrix = shift_matrix,                                     diff.conceal = TRUE) q_matrix ##    0A 1A 0B 1B ## 0A NA  3  5  0 ## 1A  4 NA  0  5 ## 0B  6  0 NA  3 ## 1B  0  6  4 NA"},{"path":"https://rsetienne.github.io/secsse/articles/starting_secsse.html","id":"maximum-likelihood-2","dir":"Articles","previous_headings":"Setting up an analysis > CR","what":"Maximum Likelihood","title":"Starting secsse","text":"now recover non-zero extinction rate, much higher transition rates concealed observed states.","code":"idparsopt <- 1:6 # our maximum rate parameter was 6 idparsfix <- c(0) # we want to keep all zeros at zero initparsopt <- rep(0.1, 6) initparsfix <- c(0.0) # all zeros remain at zero. sampling_fraction <- c(1, 1)  idparslist <- list() idparslist[[1]] <- lambda_list idparslist[[2]] <- mu_vec idparslist[[3]] <- q_matrix  answ <- secsse::cla_secsse_ml(phy = phylo_vignette,                               traits = traits$trait,                               num_concealed_states = 2,                               idparslist = idparslist,                               idparsopt = idparsopt,                               initparsopt = initparsopt,                               idparsfix = idparsfix,                               parsfix = initparsfix,                               sampling_fraction = sampling_fraction,                               verbose = FALSE) ## Warning in check_ml_conditions(traits, idparslist, initparsopt, idparsopt, : ## Note: you set some transitions as impossible to happen. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ## Deduced names and order of used states to be: 0, 1 ## if this is incorrect, consider passing states as matching numeric  ## ordering, e.g. 1 for the first state, 2 for the second etc. ML_CR <- answ$ML CR_par <- secsse::extract_par_vals(idparslist, answ$MLpars) ML_CR ## [1] -99.64176 CR_par ## [1] 6.923591e-01 1.444426e-07 7.760335e-02 5.258368e-10 1.000000e-01 ## [6] 1.000000e-01 spec_rate <- CR_par[1] ext_rate <-  CR_par[2] Q_Examined <- CR_par[3:4] Q_Concealed <- CR_par[5:6] spec_rate ## [1] 0.6923591 ext_rate ## [1] 1.444426e-07 Q_Examined ## [1] 7.760335e-02 5.258368e-10 Q_Concealed ## [1] 0.1 0.1"},{"path":"https://rsetienne.github.io/secsse/articles/starting_secsse.html","id":"model-comparisong-using-aic","dir":"Articles","previous_headings":"Setting up an analysis","what":"Model comparisong using AIC","title":"Starting secsse","text":"collected different log likelihoods, can directly compare models using AIC. Remembering AIC 2k - 2LL, k number parameters model LL Log Likelihood, can calculate follows: can now reveal tree used generated using ETD model, correctly recovered!","code":"res <- data.frame(ll = c(ML_ETD, ML_CTD, ML_CR),                   k  = c(8, 8, 6),                   model = c(\"ETD\", \"CTD\", \"CR\")) res$AIC <- 2 * res$k - 2 * res$ll res ##          ll k model      AIC ## 1 -96.32138 8   ETD 208.6428 ## 2 -99.64190 8   CTD 215.2838 ## 3 -99.64176 6    CR 211.2835"},{"path":"https://rsetienne.github.io/secsse/articles/starting_secsse.html","id":"further-help","dir":"Articles","previous_headings":"","what":"Further help","title":"Starting secsse","text":"reading vignettes, still questions, please feel free create issue package’s GitHub repository https://github.com/rsetienne/secsse/issues e-mail authors help R package. Additionally, bug reports feature requests welcome means.","code":""},{"path":"https://rsetienne.github.io/secsse/articles/starting_secsse.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Starting secsse","text":"Beaulieu, J. M., O’Meara, B. C., & Donoghue, M. J. (2013). Identifying hidden rate changes evolution binary morphological character: evolution plant habit campanulid angiosperms. Systematic biology, 62(5), 725-737. Beaulieu, J. M., & O’Meara, B. C. (2016). Detecting hidden diversification shifts models trait-dependent speciation extinction. Systematic biology, 65(4), 583-601. FitzJohn, R. G. (2012). Diversitree: comparative phylogenetic analyses diversification R. Methods Ecology Evolution, 3(6), 1084-1092. Harmon, L. J., Weir, J. T., Brock, C. D., Glor, R. E., & Challenger, W. (2008). GEIGER: investigating evolutionary radiations. Bioinformatics, 24(1), 129-131. Rabosky, D. L., & Goldberg, E. E. (2015). Model inadequacy mistaken inferences trait-dependent speciation. Systematic Biology, 64(2), 340-355.","code":""},{"path":"https://rsetienne.github.io/secsse/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Leonel Herrera Alsina. Author. Paul van Els. Author. Thijs Janzen. Contributor. Hanno Hildenbrandt. Contributor. Pedro Santos Neves. Contributor. Rampal S. Etienne. Maintainer, author.","code":""},{"path":"https://rsetienne.github.io/secsse/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Herrera Alsina L, van Els P, S. Etienne R (2019). “Detecting Dependence Diversification Multiple Traits Phylogenetic Trees Trait Data.” Systematic Biology, 68(2), 317–328. doi:10.1093/sysbio/syy057.","code":"@Article{,   title = {Detecting the Dependence of Diversification on Multiple Traits from Phylogenetic Trees and Trait Data},   author = {Leonel {Herrera Alsina} and Paul {van Els} and Rampal {S. Etienne}},   journal = {Systematic Biology},   year = {2019},   volume = {68},   number = {2},   pages = {317--328},   doi = {10.1093/sysbio/syy057}, }"},{"path":[]},{"path":"https://rsetienne.github.io/secsse/index.html","id":"what-is-secsse","dir":"","previous_headings":"","what":"What is SecSSE?","title":"Several Examined and Concealed States-Dependent Speciation and Extinction","text":"SecSSE R package designed multistate data sets concealed state speciation (hisse) framework. sense, parallel ‘MuSSE’ functionality implemented diversitree, accounts finding possible spurious relationships traits diversification rates (“false positives”, Rabosky & Goldberg 2015) testing “hidden trait” (Beaulieu et al. 2013), responsible variation diversification rates trait investigated.","code":""},{"path":"https://rsetienne.github.io/secsse/index.html","id":"installing-secsse","dir":"","previous_headings":"","what":"Installing secsse","title":"Several Examined and Concealed States-Dependent Speciation and Extinction","text":"secsse package stable version CRAN development version GitHub.","code":""},{"path":"https://rsetienne.github.io/secsse/index.html","id":"from-cran","dir":"","previous_headings":"Installing secsse","what":"From CRAN","title":"Several Examined and Concealed States-Dependent Speciation and Extinction","text":"within R, :","code":"install.packages(\"secsse\")"},{"path":"https://rsetienne.github.io/secsse/index.html","id":"from-github","dir":"","previous_headings":"Installing secsse","what":"From GitHub","title":"Several Examined and Concealed States-Dependent Speciation and Extinction","text":"Install secsse GitHub repository running:","code":"install.packages(\"remotes\") remotes::install_github(\"rsetienne/secsse\")"},{"path":[]},{"path":"https://rsetienne.github.io/secsse/index.html","id":"from-cran-1","dir":"","previous_headings":"Using secsse as a package dependency","what":"From CRAN","title":"Several Examined and Concealed States-Dependent Speciation and Extinction","text":"DESCRIPTION file, add secsse normal package. package directly uses secsse: package uses secsse peripherals (e.g. vignettes tests):","code":"Imports:   secsse Suggests:   secsse"},{"path":"https://rsetienne.github.io/secsse/index.html","id":"from-github-1","dir":"","previous_headings":"Using secsse as a package dependency","what":"From GitHub","title":"Several Examined and Concealed States-Dependent Speciation and Extinction","text":"","code":"Remotes:   rsetienne/secsse"},{"path":"https://rsetienne.github.io/secsse/index.html","id":"cite","dir":"","previous_headings":"","what":"Cite","title":"Several Examined and Concealed States-Dependent Speciation and Extinction","text":"use secsse publications, please cite: Herrera-Alsina, Leonel et al. “Detecting Dependence Diversification Multiple Traits Phylogenetic Trees Trait Data.” Systematic biology vol. 68,2 (2019): 317-328. https://doi.org/10.1093/sysbio/syy057","code":""},{"path":"https://rsetienne.github.io/secsse/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Several Examined and Concealed States-Dependent Speciation and Extinction","text":"Beaulieu, Jeremy M et al. “Identifying hidden rate changes evolution binary morphological character: evolution plant habit campanulid angiosperms.” Systematic biology vol. 62,5 (2013): 725-37. https://doi.org/.1093/sysbio/syt034 Beaulieu, Jeremy M, Brian C O’Meara. “Detecting Hidden Diversification Shifts Models Trait-Dependent Speciation Extinction.” Systematic biology vol. 65,4 (2016): 583-601. https://doi.org/10.1093/sysbio/syw022 Rabosky, Daniel L., Emma E. Goldberg. “Model inadequacy mistaken inferences trait-dependent speciation.” Systematic biology 64.2 (2015): 340-355. https://doi.org/10.1093/sysbio/syu131","code":""},{"path":"https://rsetienne.github.io/secsse/reference/cla_id_paramPos.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter structure setting for cla_secsse It sets the parameters (speciation, extinction and transition) IDs. Needed for ML calculation with cladogenetic options (cla_secsse_ml) — cla_id_paramPos","title":"Parameter structure setting for cla_secsse It sets the parameters (speciation, extinction and transition) IDs. Needed for ML calculation with cladogenetic options (cla_secsse_ml) — cla_id_paramPos","text":"Parameter structure setting cla_secsse sets parameters (speciation, extinction transition) IDs. Needed ML calculation cladogenetic options (cla_secsse_ml)","code":""},{"path":"https://rsetienne.github.io/secsse/reference/cla_id_paramPos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parameter structure setting for cla_secsse It sets the parameters (speciation, extinction and transition) IDs. Needed for ML calculation with cladogenetic options (cla_secsse_ml) — cla_id_paramPos","text":"","code":"cla_id_paramPos(traits, num_concealed_states)"},{"path":"https://rsetienne.github.io/secsse/reference/cla_id_paramPos.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter structure setting for cla_secsse It sets the parameters (speciation, extinction and transition) IDs. Needed for ML calculation with cladogenetic options (cla_secsse_ml) — cla_id_paramPos","text":"traits vector trait states tip phylogeny. order states must tree tips. help, see vignette(\"starting_secsse\", package = \"secsse\"). num_concealed_states number concealed states, generally equivalent number examined states dataset.","code":""},{"path":"https://rsetienne.github.io/secsse/reference/cla_id_paramPos.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parameter structure setting for cla_secsse It sets the parameters (speciation, extinction and transition) IDs. Needed for ML calculation with cladogenetic options (cla_secsse_ml) — cla_id_paramPos","text":"list includes ids parameters ML analysis.","code":""},{"path":"https://rsetienne.github.io/secsse/reference/cla_id_paramPos.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parameter structure setting for cla_secsse It sets the parameters (speciation, extinction and transition) IDs. Needed for ML calculation with cladogenetic options (cla_secsse_ml) — cla_id_paramPos","text":"","code":"traits <- sample(c(0,1,2), 45,replace = TRUE) #get some traits num_concealed_states <- 3 param_posit <- cla_id_paramPos(traits, num_concealed_states)"},{"path":"https://rsetienne.github.io/secsse/reference/cla_secsse_loglik.html","id":null,"dir":"Reference","previous_headings":"","what":"Likelihood for SecSSE model, using Rcpp Loglikelihood calculation for the cla_SecSSE model given a set of parameters and data using Rcpp — cla_secsse_loglik","title":"Likelihood for SecSSE model, using Rcpp Loglikelihood calculation for the cla_SecSSE model given a set of parameters and data using Rcpp — cla_secsse_loglik","text":"Likelihood SecSSE model, using Rcpp Loglikelihood calculation cla_SecSSE model given set parameters data using Rcpp","code":""},{"path":"https://rsetienne.github.io/secsse/reference/cla_secsse_loglik.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Likelihood for SecSSE model, using Rcpp Loglikelihood calculation for the cla_SecSSE model given a set of parameters and data using Rcpp — cla_secsse_loglik","text":"","code":"cla_secsse_loglik(   parameter,   phy,   traits,   num_concealed_states,   cond = \"proper_cond\",   root_state_weight = \"proper_weights\",   sampling_fraction,   setting_calculation = NULL,   see_ancestral_states = FALSE,   loglik_penalty = 0,   is_complete_tree = FALSE,   num_threads = 1,   method = \"odeint::bulirsch_stoer\",   atol = 1e-08,   rtol = 1e-07 )"},{"path":"https://rsetienne.github.io/secsse/reference/cla_secsse_loglik.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Likelihood for SecSSE model, using Rcpp Loglikelihood calculation for the cla_SecSSE model given a set of parameters and data using Rcpp — cla_secsse_loglik","text":"parameter list first vector represents lambdas, second mus third transition rates. phy phylogenetic tree class phylo, rooted branch lengths. traits vector trait states tip phylogeny. order states must tree tips. help, see vignette(\"starting_secsse\", package = \"secsse\"). num_concealed_states number concealed states, generally equivalent number examined states dataset. cond condition existence node root: \"maddison_cond\", \"proper_cond\" (default). details, see vignette. root_state_weight method weigh states: \"maddison_weights\", \"proper_weights\" (default) \"equal_weights\". can also specified root state: vector c(1, 0, 0) indicates state 1 root state. sampling_fraction vector states sampling proportion per trait state. must many elements trait states. setting_calculation argument used internally speed calculation. left blank (default : setting_calculation = NULL). see_ancestral_states Boolean whether ancestral states shown? Defaults FALSE. loglik_penalty size penalty parameters; default 0 (penalty). is_complete_tree logical specifying whether tree extinct species provided. set TRUE, also assumes extinct lineages present tree. Defaults FALSE. num_threads number threads used. Default one thread. method integration method used, available : \"odeint::runge_kutta_cash_karp54\", \"odeint::runge_kutta_fehlberg78\", \"odeint::runge_kutta_dopri5\", \"odeint::bulirsch_stoer\" \"odeint::runge_kutta4\". Default method : \"odeint::bulirsch_stoer\". atol numeric specifying absolute tolerance integration. rtol numeric specifying relative tolerance integration.","code":""},{"path":"https://rsetienne.github.io/secsse/reference/cla_secsse_loglik.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Likelihood for SecSSE model, using Rcpp Loglikelihood calculation for the cla_SecSSE model given a set of parameters and data using Rcpp — cla_secsse_loglik","text":"loglikelihood data given parameters","code":""},{"path":"https://rsetienne.github.io/secsse/reference/cla_secsse_loglik.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Likelihood for SecSSE model, using Rcpp Loglikelihood calculation for the cla_SecSSE model given a set of parameters and data using Rcpp — cla_secsse_loglik","text":"","code":"rm(list=ls(all=TRUE)) library(secsse) set.seed(13) phylotree <- ape::rcoal(12, tip.label = 1:12) traits <- sample(c(0,1,2),ape::Ntip(phylotree),replace=TRUE) num_concealed_states <- 3 sampling_fraction <- c(1,1,1) phy <- phylotree # the idparlist for a ETD model (dual state inheritance model of evolution) # would be set like this: idparlist <- cla_id_paramPos(traits,num_concealed_states) lambd_and_modeSpe <- idparlist$lambdas lambd_and_modeSpe[1,] <- c(1,1,1,2,2,2,3,3,3) idparlist[[1]] <- lambd_and_modeSpe idparlist[[2]][] <- 0 masterBlock <- matrix(4,ncol=3,nrow=3,byrow=TRUE) diag(masterBlock) <- NA idparlist [[3]] <- q_doubletrans(traits,masterBlock,diff.conceal = FALSE) # Now, internally, clasecsse sorts the lambda matrices, so they look like: prepare_full_lambdas(traits,num_concealed_states,idparlist[[1]]) #> [[1]] #>       [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] #>  [1,]    1    0    0    0    0    0    0    0    0 #>  [2,]    0    0    0    0    0    0    0    0    0 #>  [3,]    0    0    0    0    0    0    0    0    0 #>  [4,]    0    0    0    0    0    0    0    0    0 #>  [5,]    0    0    0    0    0    0    0    0    0 #>  [6,]    0    0    0    0    0    0    0    0    0 #>  [7,]    0    0    0    0    0    0    0    0    0 #>  [8,]    0    0    0    0    0    0    0    0    0 #>  [9,]    0    0    0    0    0    0    0    0    0 #>  #> [[2]] #>       [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] #>  [1,]    0    0    0    0    0    0    0    0    0 #>  [2,]    0    1    0    0    0    0    0    0    0 #>  [3,]    0    0    0    0    0    0    0    0    0 #>  [4,]    0    0    0    0    0    0    0    0    0 #>  [5,]    0    0    0    0    0    0    0    0    0 #>  [6,]    0    0    0    0    0    0    0    0    0 #>  [7,]    0    0    0    0    0    0    0    0    0 #>  [8,]    0    0    0    0    0    0    0    0    0 #>  [9,]    0    0    0    0    0    0    0    0    0 #>  #> [[3]] #>       [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] #>  [1,]    0    0    0    0    0    0    0    0    0 #>  [2,]    0    0    0    0    0    0    0    0    0 #>  [3,]    0    0    1    0    0    0    0    0    0 #>  [4,]    0    0    0    0    0    0    0    0    0 #>  [5,]    0    0    0    0    0    0    0    0    0 #>  [6,]    0    0    0    0    0    0    0    0    0 #>  [7,]    0    0    0    0    0    0    0    0    0 #>  [8,]    0    0    0    0    0    0    0    0    0 #>  [9,]    0    0    0    0    0    0    0    0    0 #>  #> [[4]] #>       [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] #>  [1,]    0    0    0    0    0    0    0    0    0 #>  [2,]    0    0    0    0    0    0    0    0    0 #>  [3,]    0    0    0    0    0    0    0    0    0 #>  [4,]    0    0    0    2    0    0    0    0    0 #>  [5,]    0    0    0    0    0    0    0    0    0 #>  [6,]    0    0    0    0    0    0    0    0    0 #>  [7,]    0    0    0    0    0    0    0    0    0 #>  [8,]    0    0    0    0    0    0    0    0    0 #>  [9,]    0    0    0    0    0    0    0    0    0 #>  #> [[5]] #>       [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] #>  [1,]    0    0    0    0    0    0    0    0    0 #>  [2,]    0    0    0    0    0    0    0    0    0 #>  [3,]    0    0    0    0    0    0    0    0    0 #>  [4,]    0    0    0    0    0    0    0    0    0 #>  [5,]    0    0    0    0    2    0    0    0    0 #>  [6,]    0    0    0    0    0    0    0    0    0 #>  [7,]    0    0    0    0    0    0    0    0    0 #>  [8,]    0    0    0    0    0    0    0    0    0 #>  [9,]    0    0    0    0    0    0    0    0    0 #>  #> [[6]] #>       [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] #>  [1,]    0    0    0    0    0    0    0    0    0 #>  [2,]    0    0    0    0    0    0    0    0    0 #>  [3,]    0    0    0    0    0    0    0    0    0 #>  [4,]    0    0    0    0    0    0    0    0    0 #>  [5,]    0    0    0    0    0    0    0    0    0 #>  [6,]    0    0    0    0    0    2    0    0    0 #>  [7,]    0    0    0    0    0    0    0    0    0 #>  [8,]    0    0    0    0    0    0    0    0    0 #>  [9,]    0    0    0    0    0    0    0    0    0 #>  #> [[7]] #>       [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] #>  [1,]    0    0    0    0    0    0    0    0    0 #>  [2,]    0    0    0    0    0    0    0    0    0 #>  [3,]    0    0    0    0    0    0    0    0    0 #>  [4,]    0    0    0    0    0    0    0    0    0 #>  [5,]    0    0    0    0    0    0    0    0    0 #>  [6,]    0    0    0    0    0    0    0    0    0 #>  [7,]    0    0    0    0    0    0    3    0    0 #>  [8,]    0    0    0    0    0    0    0    0    0 #>  [9,]    0    0    0    0    0    0    0    0    0 #>  #> [[8]] #>       [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] #>  [1,]    0    0    0    0    0    0    0    0    0 #>  [2,]    0    0    0    0    0    0    0    0    0 #>  [3,]    0    0    0    0    0    0    0    0    0 #>  [4,]    0    0    0    0    0    0    0    0    0 #>  [5,]    0    0    0    0    0    0    0    0    0 #>  [6,]    0    0    0    0    0    0    0    0    0 #>  [7,]    0    0    0    0    0    0    0    0    0 #>  [8,]    0    0    0    0    0    0    0    3    0 #>  [9,]    0    0    0    0    0    0    0    0    0 #>  #> [[9]] #>       [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] #>  [1,]    0    0    0    0    0    0    0    0    0 #>  [2,]    0    0    0    0    0    0    0    0    0 #>  [3,]    0    0    0    0    0    0    0    0    0 #>  [4,]    0    0    0    0    0    0    0    0    0 #>  [5,]    0    0    0    0    0    0    0    0    0 #>  [6,]    0    0    0    0    0    0    0    0    0 #>  [7,]    0    0    0    0    0    0    0    0    0 #>  [8,]    0    0    0    0    0    0    0    0    0 #>  [9,]    0    0    0    0    0    0    0    0    3 #>  # which is a list with 9 matrices, corresponding to the 9 states # (0A,1A,2A,0B,etc) # if we want to calculate a single likelihood: parameter <- idparlist lambda_and_modeSpe <- parameter$lambdas lambda_and_modeSpe[1,] <- c(0.2,0.2,0.2,0.4,0.4,0.4,0.01,0.01,0.01) parameter[[1]] <- prepare_full_lambdas(traits,num_concealed_states, lambda_and_modeSpe) parameter[[2]] <- rep(0,9) masterBlock <- matrix(0.07, ncol=3, nrow=3, byrow=TRUE) diag(masterBlock) <- NA parameter [[3]] <- q_doubletrans(traits,masterBlock,diff.conceal = FALSE) cla_secsse_loglik(parameter, phy, traits, num_concealed_states,                  cond = 'maddison_cond',                  root_state_weight = 'maddison_weights', sampling_fraction,                  setting_calculation = NULL,                  see_ancestral_states = FALSE,                  loglik_penalty = 0) #> [1] -42.18407 # LL = -42.18407"},{"path":"https://rsetienne.github.io/secsse/reference/cla_secsse_ml.html","id":null,"dir":"Reference","previous_headings":"","what":"Maximum likehood estimation for (SecSSE) — cla_secsse_ml","title":"Maximum likehood estimation for (SecSSE) — cla_secsse_ml","text":"Maximum likehood estimation Several examined concealed States-dependent Speciation Extinction (SecSSE) cladogenetic option","code":""},{"path":"https://rsetienne.github.io/secsse/reference/cla_secsse_ml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Maximum likehood estimation for (SecSSE) — cla_secsse_ml","text":"","code":"cla_secsse_ml(   phy,   traits,   num_concealed_states,   idparslist,   idparsopt,   initparsopt,   idparsfix,   parsfix,   cond = \"proper_cond\",   root_state_weight = \"proper_weights\",   sampling_fraction,   tol = c(1e-04, 1e-05, 1e-07),   maxiter = 1000 * round((1.25)^length(idparsopt)),   optimmethod = \"subplex\",   num_cycles = 1,   loglik_penalty = 0,   is_complete_tree = FALSE,   verbose = (optimmethod == \"simplex\"),   num_threads = 1,   atol = 1e-08,   rtol = 1e-07,   method = \"odeint::bulirsch_stoer\" )"},{"path":"https://rsetienne.github.io/secsse/reference/cla_secsse_ml.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Maximum likehood estimation for (SecSSE) — cla_secsse_ml","text":"phy phylogenetic tree class phylo, rooted branch lengths. traits vector trait states tip phylogeny. order states must tree tips. help, see vignette(\"starting_secsse\", package = \"secsse\"). num_concealed_states number concealed states, generally equivalent number examined states dataset. idparslist overview parameters values. idparsopt numeric vector ID parameters estimated. initparsopt numeric vector initial guess parameters estimated. idparsfix numeric vector ID fixed parameters. parsfix numeric vector value fixed parameters. cond condition existence node root: \"maddison_cond\", \"proper_cond\" (default). details, see vignette. root_state_weight method weigh states: \"maddison_weights\", \"proper_weights\" (default) \"equal_weights\". can also specified root state: vector c(1, 0, 0) indicates state 1 root state. sampling_fraction vector states sampling proportion per trait state. must many elements trait states. tol numeric vector maximum tolerance optimization algorithm. Default c(1e-04, 1e-05, 1e-05). maxiter max number iterations. Default 1000 * round((1.25) ^ length(idparsopt)). optimmethod string method used optimization. Default \"subplex\". Alternative \"simplex\" used normal conditions (debugging). called DDD::optimizer(), simplex implemented natively DDD, subplex ultimately called subplex::subplex(). num_cycles Number cycles optimization. set Inf, optimization repeated result , within tolerance, equal starting values, maximum 10 cycles. loglik_penalty size penalty parameters; default 0 (penalty). is_complete_tree logical specifying whether tree extinct species provided. set TRUE, also assumes extinct lineages present tree. Defaults FALSE. verbose sets verbose output; default TRUE optimmethod \"simplex\". optimmethod set \"simplex\", even set FALSE, optimizer output shown. num_threads number threads used. Default one thread. atol numeric specifying absolute tolerance integration. rtol numeric specifying relative tolerance integration. method integration method used, available : \"odeint::runge_kutta_cash_karp54\", \"odeint::runge_kutta_fehlberg78\", \"odeint::runge_kutta_dopri5\", \"odeint::bulirsch_stoer\" \"odeint::runge_kutta4\". Default method : \"odeint::bulirsch_stoer\".","code":""},{"path":"https://rsetienne.github.io/secsse/reference/cla_secsse_ml.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Maximum likehood estimation for (SecSSE) — cla_secsse_ml","text":"Parameter estimated maximum likelihood","code":""},{"path":"https://rsetienne.github.io/secsse/reference/cla_secsse_ml.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Maximum likehood estimation for (SecSSE) — cla_secsse_ml","text":"","code":"# Example of how to set the arguments for a ML search. library(secsse) library(DDD) set.seed(13) # Check the vignette for a better working exercise. # lambdas for 0A and 1A and 2A are the same but need to be estimated # (CTD model, see Syst Biol paper) # mus are fixed to zero, # the transition rates are constrained to be equal and fixed 0.01 phylotree <- ape::rcoal(31, tip.label = 1:31) #get some traits traits <-  sample(c(0,1,2), ape::Ntip(phylotree), replace = TRUE) num_concealed_states <- 3 idparslist <- cla_id_paramPos(traits,num_concealed_states) idparslist$lambdas[1,] <- c(1,1,1,2,2,2,3,3,3) idparslist[[2]][] <- 4 masterBlock <- matrix(5,ncol = 3,nrow = 3,byrow = TRUE) diag(masterBlock) <- NA diff.conceal <- FALSE idparslist[[3]] <- q_doubletrans(traits,masterBlock,diff.conceal) startingpoint <- bd_ML(brts = ape::branching.times(phylotree)) #> You are optimizing lambda0 mu0  #> You are fixing lambda1 mu1  #> Optimizing the likelihood - this may take a while.  #> The loglikelihood for the initial parameter values is -67.5669039297515. #>  #> Maximum likelihood parameter estimates: lambda0: 15.604290, mu0: 15.874464, lambda1: 0.000000, mu1: 0.000000:  #> Maximum loglikelihood: 25.282018 intGuessLamba <- startingpoint$lambda0 intGuessMu <- startingpoint$mu0 idparsopt <- c(1,2,3) initparsopt <- c(rep(intGuessLamba,3)) idparsfix <- c(0,4,5) parsfix <- c(0,0,0.01) tol <- c(1e-04, 1e-05, 1e-07) maxiter <- 1000 * round((1.25) ^ length(idparsopt)) optimmethod <- 'subplex' cond <- 'proper_cond' root_state_weight <- 'proper_weights' sampling_fraction <- c(1,1,1) model <- cla_secsse_ml(  phylotree,  traits,  num_concealed_states,  idparslist,  idparsopt,  initparsopt,  idparsfix,  parsfix,  cond,  root_state_weight,  sampling_fraction,  tol,  maxiter,  optimmethod,  num_cycles = 1,  num_threads = 1,  verbose = FALSE) #> Warning: Note: you set some transitions as impossible to happen. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. # [1] -90.97626"},{"path":"https://rsetienne.github.io/secsse/reference/cla_secsse_ml_func_def_pars.html","id":null,"dir":"Reference","previous_headings":"","what":"Maximum likehood estimation for (SecSSE) with parameter as complex functions. Cladogenetic version — cla_secsse_ml_func_def_pars","title":"Maximum likehood estimation for (SecSSE) with parameter as complex functions. Cladogenetic version — cla_secsse_ml_func_def_pars","text":"Maximum likehood estimation cla Several examined concealed States-dependent Speciation Extinction (SecSSE) paramaters functions parameters /factors. Offers option cladogenesis","code":""},{"path":"https://rsetienne.github.io/secsse/reference/cla_secsse_ml_func_def_pars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Maximum likehood estimation for (SecSSE) with parameter as complex functions. Cladogenetic version — cla_secsse_ml_func_def_pars","text":"","code":"cla_secsse_ml_func_def_pars(   phy,   traits,   num_concealed_states,   idparslist,   idparsopt,   initparsopt,   idfactorsopt,   initfactors,   idparsfix,   parsfix,   idparsfuncdefpar,   functions_defining_params,   cond = \"proper_cond\",   root_state_weight = \"proper_weights\",   sampling_fraction,   tol = c(1e-04, 1e-05, 1e-07),   maxiter = 1000 * round((1.25)^length(idparsopt)),   optimmethod = \"subplex\",   num_cycles = 1,   loglik_penalty = 0,   is_complete_tree = FALSE,   verbose = (optimmethod == \"simplex\"),   num_threads = 1,   atol = 1e-12,   rtol = 1e-12,   method = \"odeint::bulirsch_stoer\" )"},{"path":"https://rsetienne.github.io/secsse/reference/cla_secsse_ml_func_def_pars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Maximum likehood estimation for (SecSSE) with parameter as complex functions. Cladogenetic version — cla_secsse_ml_func_def_pars","text":"phy phylogenetic tree class phylo, rooted branch lengths. traits vector trait states tip phylogeny. order states must tree tips. help, see vignette(\"starting_secsse\", package = \"secsse\"). num_concealed_states number concealed states, generally equivalent number examined states dataset. idparslist overview parameters values. idparsopt numeric vector ID parameters estimated. initparsopt numeric vector initial guess parameters estimated. idfactorsopt id factors optimized. fixed factors, use constant within functions_defining_params. initfactors initial guess factor (set NULL factors). idparsfix numeric vector ID fixed parameters. parsfix numeric vector value fixed parameters. idparsfuncdefpar id parameters function optimized /fixed parameters. order id match functions_defining_params. functions_defining_params list functions. element function defines parameter e.g. id_3 <- (id_1 + id_2) / 2. See example. cond condition existence node root: \"maddison_cond\", \"proper_cond\" (default). details, see vignette. root_state_weight method weigh states: \"maddison_weights\", \"proper_weights\" (default) \"equal_weights\". can also specified root state: vector c(1, 0, 0) indicates state 1 root state. sampling_fraction vector states sampling proportion per trait state. must many elements trait states. tol numeric vector maximum tolerance optimization algorithm. Default c(1e-04, 1e-05, 1e-05). maxiter max number iterations. Default 1000 * round((1.25) ^ length(idparsopt)). optimmethod string method used optimization. Default \"subplex\". Alternative \"simplex\" used normal conditions (debugging). called DDD::optimizer(), simplex implemented natively DDD, subplex ultimately called subplex::subplex(). num_cycles Number cycles optimization. set Inf, optimization repeated result , within tolerance, equal starting values, maximum 10 cycles. loglik_penalty size penalty parameters; default 0 (penalty). is_complete_tree logical specifying whether tree extinct species provided. set TRUE, also assumes extinct lineages present tree. Defaults FALSE. verbose sets verbose output; default TRUE optimmethod \"simplex\". optimmethod set \"simplex\", even set FALSE, optimizer output shown. num_threads number threads used. Default one thread. atol numeric specifying absolute tolerance integration. rtol numeric specifying relative tolerance integration. method integration method used, available : \"odeint::runge_kutta_cash_karp54\", \"odeint::runge_kutta_fehlberg78\", \"odeint::runge_kutta_dopri5\", \"odeint::bulirsch_stoer\" \"odeint::runge_kutta4\". Default method : \"odeint::bulirsch_stoer\".","code":""},{"path":"https://rsetienne.github.io/secsse/reference/cla_secsse_ml_func_def_pars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Maximum likehood estimation for (SecSSE) with parameter as complex functions. Cladogenetic version — cla_secsse_ml_func_def_pars","text":"Parameter estimated maximum likelihood","code":""},{"path":"https://rsetienne.github.io/secsse/reference/cla_secsse_ml_func_def_pars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Maximum likehood estimation for (SecSSE) with parameter as complex functions. Cladogenetic version — cla_secsse_ml_func_def_pars","text":"","code":"# Example of how to set the arguments for a ML search. rm(list=ls(all=TRUE)) library(secsse) library(DDD) set.seed(16) phylotree <- ape::rbdtree(0.07,0.001,Tmax=50) startingpoint <- bd_ML(brts = ape::branching.times(phylotree)) #> You are optimizing lambda0 mu0  #> You are fixing lambda1 mu1  #> Optimizing the likelihood - this may take a while.  #> The loglikelihood for the initial parameter values is -106.425581129189. #>  #> Maximum likelihood parameter estimates: lambda0: 0.056537, mu0: 0.000000, lambda1: 0.000000, mu1: 0.000000:  #> Maximum loglikelihood: -104.592844 intGuessLamba <- startingpoint$lambda0 intGuessMu <- startingpoint$mu0 traits <-  sample(c(0,1,2),                  ape::Ntip(phylotree), replace = TRUE) # get some traits num_concealed_states <- 3 idparslist <- cla_id_paramPos(traits, num_concealed_states) idparslist$lambdas[1,] <- c(1,2,3,1,2,3,1,2,3) idparslist[[2]][] <- 4 masterBlock <- matrix(c(5,6,5,6,5,6,5,6,5),ncol = 3, nrow=3, byrow = TRUE) diag(masterBlock) <- NA diff.conceal <- FALSE idparslist[[3]] <- q_doubletrans(traits,masterBlock,diff.conceal) idparsfuncdefpar <- c(3,5,6) idparsopt <- c(1,2) idparsfix <- c(0,4) initparsopt <- c(rep(intGuessLamba,2)) parsfix <- c(0,0) idfactorsopt <- 1 initfactors <- 4 # functions_defining_params is a list of functions. Each function has no # arguments and to refer # to parameters ids should be indicated as 'par_' i.e. par_3 refers to # parameter 3. When a # function is defined, be sure that all the parameters involved are either # estimated, fixed or # defined by previous functions (i.e, a function that defines parameter in # 'functions_defining_params'). The user is responsible for this. In this # example, par_3 # (i.e., parameter 3) is needed to calculate par_6. This is correct because # par_3 is defined # in the first function of 'functions_defining_params'. Notice that factor_1 # indicates a value # that will be estimated to satisfy the equation. The same factor can be # shared to define several parameters. functions_defining_params <- list() functions_defining_params[[1]] <- function() {  par_3 <- par_1 + par_2 } functions_defining_params[[2]] <- function() {  par_5 <- par_1 * factor_1 } functions_defining_params[[3]] <- function() {  par_6 <- par_3 * factor_1 }  tol = c(1e-02, 1e-03, 1e-04) maxiter = 1000 * round((1.25)^length(idparsopt)) optimmethod = 'subplex' cond <- 'proper_cond' root_state_weight <- 'proper_weights' sampling_fraction <- c(1,1,1) model <- cla_secsse_ml_func_def_pars(phylotree, traits, num_concealed_states, idparslist, idparsopt, initparsopt, idfactorsopt, initfactors, idparsfix, parsfix, idparsfuncdefpar, functions_defining_params, cond, root_state_weight, sampling_fraction, tol, maxiter, optimmethod, num_cycles = 1) #> Warning: Note: you set some transitions as impossible to happen. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. # ML -136.5796"},{"path":"https://rsetienne.github.io/secsse/reference/create_default_lambda_transition_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to create a default lambda list — create_default_lambda_transition_matrix","title":"Helper function to create a default lambda list — create_default_lambda_transition_matrix","text":"function generates generic lambda list, assuming transitions states, e.g. species observed state 0 generates daughter species state 0 well.","code":""},{"path":"https://rsetienne.github.io/secsse/reference/create_default_lambda_transition_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to create a default lambda list — create_default_lambda_transition_matrix","text":"","code":"create_default_lambda_transition_matrix(   state_names = c(\"0\", \"1\"),   model = \"ETD\" )"},{"path":"https://rsetienne.github.io/secsse/reference/create_default_lambda_transition_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to create a default lambda list — create_default_lambda_transition_matrix","text":"state_names vector names observed states. model used model, choice \"ETD\" (Examined Traits Diversification), \"CTD\" (Concealed Traits Diversification) \"CR\" (Constant Rate).","code":""},{"path":"https://rsetienne.github.io/secsse/reference/create_default_lambda_transition_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Helper function to create a default lambda list — create_default_lambda_transition_matrix","text":"","code":"lambda_matrix <-      create_default_lambda_transition_matrix(state_names = c(0, 1),                                              model = \"ETD\") lambda_list <- create_lambda_list(state_names = c(0, 1),                                   num_concealed_states = 2,                                   transition_matrix = lambda_matrix,                                   model = \"ETD\")"},{"path":"https://rsetienne.github.io/secsse/reference/create_default_shift_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to create a default shift_matrix list — create_default_shift_matrix","title":"Helper function to create a default shift_matrix list — create_default_shift_matrix","text":"function generates generic shift matrix used function create_q_matrix().","code":""},{"path":"https://rsetienne.github.io/secsse/reference/create_default_shift_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to create a default shift_matrix list — create_default_shift_matrix","text":"","code":"create_default_shift_matrix(   state_names = c(\"0\", \"1\"),   num_concealed_states = 2,   mu_vector = NULL )"},{"path":"https://rsetienne.github.io/secsse/reference/create_default_shift_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to create a default shift_matrix list — create_default_shift_matrix","text":"state_names vector names observed states. num_concealed_states number concealed states, generally equivalent number examined states dataset. mu_vector previously defined mus - used choose indicator number.","code":""},{"path":"https://rsetienne.github.io/secsse/reference/create_default_shift_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Helper function to create a default shift_matrix list — create_default_shift_matrix","text":"","code":"shift_matrix <- create_default_shift_matrix(state_names = c(0, 1),                                             num_concealed_states = 2,                                             mu_vector = c(1, 2, 1, 2)) q_matrix <- create_q_matrix(state_names = c(0, 1),                             num_concealed_states = 2,                             shift_matrix = shift_matrix,                             diff.conceal = FALSE)"},{"path":"https://rsetienne.github.io/secsse/reference/create_lambda_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to automatically create lambda matrices, based on input — create_lambda_list","title":"Helper function to automatically create lambda matrices, based on input — create_lambda_list","text":"Helper function automatically create lambda matrices, based input","code":""},{"path":"https://rsetienne.github.io/secsse/reference/create_lambda_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to automatically create lambda matrices, based on input — create_lambda_list","text":"","code":"create_lambda_list(   state_names = c(0, 1),   num_concealed_states = 2,   transition_matrix,   model = \"ETD\",   concealed_spec_rates = NULL )"},{"path":"https://rsetienne.github.io/secsse/reference/create_lambda_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to automatically create lambda matrices, based on input — create_lambda_list","text":"state_names vector names observed states. num_concealed_states number concealed states, generally equivalent number examined states dataset. transition_matrix matrix containing description speciation events, first column indicates source state, second third column indicate two daughter states, fourth column gives rate indicator used. E.g.: [\"SA\", \"S\", \"\", 1] trait state \"SA\" upon speciation generates two daughter species traits \"S\" \"\", number 1 used indicator optimization likelihood. model used model, choice \"ETD\" (Examined Traits Diversification), \"CTD\" (Concealed Traits Diversification) \"CR\" (Constant Rate). concealed_spec_rates vector specifying rate indicators concealed state, length identical num_concealed_states. left empty using CTD model, assumed available speciation rates distributed uniformly concealed states.","code":""},{"path":"https://rsetienne.github.io/secsse/reference/create_lambda_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Helper function to automatically create lambda matrices, based on input — create_lambda_list","text":"","code":"trans_matrix <- c(0, 0, 0, 1) trans_matrix <- rbind(trans_matrix, c(1, 1, 1, 2)) lambda_list <- create_lambda_list(state_names = c(0, 1),                                   num_concealed_states = 2,                                   transition_matrix = trans_matrix,                                   model = \"ETD\")"},{"path":"https://rsetienne.github.io/secsse/reference/create_mu_vector.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate mus vector — create_mu_vector","title":"Generate mus vector — create_mu_vector","text":"Generate mus vector","code":""},{"path":"https://rsetienne.github.io/secsse/reference/create_mu_vector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate mus vector — create_mu_vector","text":"","code":"create_mu_vector(state_names, num_concealed_states, model = \"CR\", lambda_list)"},{"path":"https://rsetienne.github.io/secsse/reference/create_mu_vector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate mus vector — create_mu_vector","text":"state_names vector names observed states. num_concealed_states number concealed states, generally equivalent number examined states dataset. model used model, choice \"ETD\" (Examined Traits Diversification), \"CTD\" (Concealed Traits Diversification) \"CR\" (Constant Rate). lambda_list previously generated list lambda matrices, used infer rate number start .","code":""},{"path":"https://rsetienne.github.io/secsse/reference/create_mu_vector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate mus vector — create_mu_vector","text":"mu vector","code":""},{"path":"https://rsetienne.github.io/secsse/reference/create_q_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to neatly setup a Q matrix, without transitions to concealed states (only observed transitions shown) — create_q_matrix","title":"Helper function to neatly setup a Q matrix, without transitions to concealed states (only observed transitions shown) — create_q_matrix","text":"Helper function neatly setup Q matrix, without transitions concealed states (observed transitions shown)","code":""},{"path":"https://rsetienne.github.io/secsse/reference/create_q_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to neatly setup a Q matrix, without transitions to concealed states (only observed transitions shown) — create_q_matrix","text":"","code":"create_q_matrix(   state_names,   num_concealed_states,   shift_matrix,   diff.conceal = FALSE )"},{"path":"https://rsetienne.github.io/secsse/reference/create_q_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to neatly setup a Q matrix, without transitions to concealed states (only observed transitions shown) — create_q_matrix","text":"state_names vector names observed states. num_concealed_states number concealed states, generally equivalent number examined states dataset. shift_matrix matrix shifts, indicating order: starting state (typically column transition matrix) ending state (typically row transition matrix) associated rate indicator. diff.conceal Boolean stating concealed states different. E.g. transition rates concealed states different transition rates examined states. Normally FALSE order avoid huge number parameters.","code":""},{"path":"https://rsetienne.github.io/secsse/reference/create_q_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to neatly setup a Q matrix, without transitions to concealed states (only observed transitions shown) — create_q_matrix","text":"transition matrix","code":""},{"path":"https://rsetienne.github.io/secsse/reference/create_q_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Helper function to neatly setup a Q matrix, without transitions to concealed states (only observed transitions shown) — create_q_matrix","text":"","code":"shift_matrix <- c(0, 1, 5) shift_matrix <- rbind(shift_matrix, c(1, 0, 6)) q_matrix <- secsse::create_q_matrix(state_names = c(0, 1),                                     num_concealed_states = 2,                                     shift_matrix = shift_matrix,                                     diff.conceal = TRUE)"},{"path":"https://rsetienne.github.io/secsse/reference/default_params_doc.html","id":null,"dir":"Reference","previous_headings":"","what":"Default parameter documentation — default_params_doc","title":"Default parameter documentation — default_params_doc","text":"function's purpose list parameter documentation inherited relevant functions.","code":""},{"path":"https://rsetienne.github.io/secsse/reference/default_params_doc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default parameter documentation — default_params_doc","text":"","code":"default_params_doc(   phy,   traits,   num_concealed_states,   idparslist,   initparsopt,   idparsfix,   idparsopt,   idfactorsopt,   parsfix,   cond,   root_state_weight,   sampling_fraction,   tol,   maxiter,   optimethod,   num_cycles,   loglik_penalty,   is_complete_tree,   verbose,   num_threads,   atol,   rtol,   method,   parameter,   setting_calculation,   num_steps,   see_ancestral_states,   lambdas,   mus,   qs,   crown_age,   pool_init_states,   maxSpec,   conditioning,   non_extinction,   max_tries,   drop_extinct,   seed,   prob_func,   parameters,   masterBlock,   diff.conceal,   trait_info,   lambd_and_modeSpe,   initloglik,   initfactors,   idparsfuncdefpar,   functions_defining_params,   state_names,   transition_matrix,   model,   concealed_spec_rates,   shift_matrix,   q_matrix,   lambda_list,   object,   params,   param_posit,   ml_pars,   mu_vector,   max_spec,   min_spec,   max_species_extant,   tree_size_hist,   optimmethod )"},{"path":"https://rsetienne.github.io/secsse/reference/default_params_doc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default parameter documentation — default_params_doc","text":"phy phylogenetic tree class phylo, rooted branch lengths. traits vector trait states tip phylogeny. order states must tree tips. help, see vignette(\"starting_secsse\", package = \"secsse\"). num_concealed_states number concealed states, generally equivalent number examined states dataset. idparslist overview parameters values. initparsopt numeric vector initial guess parameters estimated. idparsfix numeric vector ID fixed parameters. idparsopt numeric vector ID parameters estimated. idfactorsopt id factors optimized. fixed factors, use constant within functions_defining_params. parsfix numeric vector value fixed parameters. cond condition existence node root: \"maddison_cond\", \"proper_cond\" (default). details, see vignette. root_state_weight method weigh states: \"maddison_weights\", \"proper_weights\" (default) \"equal_weights\". can also specified root state: vector c(1, 0, 0) indicates state 1 root state. sampling_fraction vector states sampling proportion per trait state. must many elements trait states. tol numeric vector maximum tolerance optimization algorithm. Default c(1e-04, 1e-05, 1e-05). maxiter max number iterations. Default 1000 * round((1.25) ^ length(idparsopt)). num_cycles Number cycles optimization. set Inf, optimization repeated result , within tolerance, equal starting values, maximum 10 cycles. loglik_penalty size penalty parameters; default 0 (penalty). is_complete_tree logical specifying whether tree extinct species provided. set TRUE, also assumes extinct lineages present tree. Defaults FALSE. verbose sets verbose output; default TRUE optimmethod \"simplex\". optimmethod set \"simplex\", even set FALSE, optimizer output shown. num_threads number threads used. Default one thread. atol numeric specifying absolute tolerance integration. rtol numeric specifying relative tolerance integration. method integration method used, available : \"odeint::runge_kutta_cash_karp54\", \"odeint::runge_kutta_fehlberg78\", \"odeint::runge_kutta_dopri5\", \"odeint::bulirsch_stoer\" \"odeint::runge_kutta4\". Default method : \"odeint::bulirsch_stoer\". parameter list first vector represents lambdas, second mus third transition rates. setting_calculation argument used internally speed calculation. left blank (default : setting_calculation = NULL). num_steps number substeps show intermediate likelihoods along branch. see_ancestral_states Boolean whether ancestral states shown? Defaults FALSE. lambdas speciation rates, form list matrices. mus extinction rates, form vector. qs Q matrix, example result function q_doubletrans, generally form matrix. crown_age crown age tree, tree simulated conditional non-extinction crown age. pool_init_states pool initial states crown, case different available states, otherwise leave NULL conditioning can \"obs_states\", \"true_states\" \"none\", tree simulated one generated contains observed states (\"obs_states\"), true states (e.g. combinations obs hidden states), always returned (\"none\"). Alternatively, vector names required observed states can provided, e.g. c(\"S\", \"N\"). non_extinction boolean stating tree conditioned non-extinction crown lineages. Defaults TRUE. max_tries maximum number simulations try obtain tree. drop_extinct boolean stating extinct species dropped tree. Defaults TRUE. seed pseudo-random number generator seed. prob_func function calculate probability interest, see description. parameters list first vector represents lambdas, second mus third transition rates. masterBlock matrix transitions among examined states, NA main diagonal, used build full transition rates matrix. diff.conceal Boolean stating concealed states different. E.g. transition rates concealed states different transition rates examined states. Normally FALSE order avoid huge number parameters. trait_info data frame first column species ids second one trait associated information. lambd_and_modeSpe matrix 4 models speciation possible. initloglik numeric value loglikehood obtained prior optimisation. used internally. initfactors initial guess factor (set NULL factors). idparsfuncdefpar id parameters function optimized /fixed parameters. order id match functions_defining_params. functions_defining_params list functions. element function defines parameter e.g. id_3 <- (id_1 + id_2) / 2. See example. state_names vector names observed states. transition_matrix matrix containing description speciation events, first column indicates source state, second third column indicate two daughter states, fourth column gives rate indicator used. E.g.: [\"SA\", \"S\", \"\", 1] trait state \"SA\" upon speciation generates two daughter species traits \"S\" \"\", number 1 used indicator optimization likelihood. model used model, choice \"ETD\" (Examined Traits Diversification), \"CTD\" (Concealed Traits Diversification) \"CR\" (Constant Rate). concealed_spec_rates vector specifying rate indicators concealed state, length identical num_concealed_states. left empty using CTD model, assumed available speciation rates distributed uniformly concealed states. shift_matrix matrix shifts, indicating order: starting state (typically column transition matrix) ending state (typically row transition matrix) associated rate indicator. q_matrix q_matrix transitions observed states. lambda_list previously generated list lambda matrices, used infer rate number start . object lambda matrices, q_matrix mu vector. params parameters order, value reflects value parameter position, e.g. c(0.3, 0.2, 0.1) fill value 0.3 parameter rate identifier 1, 0.2 parameter rate identifier 2 0.1 parameter rate identifier 3. param_posit initial parameter structure, consisting list three entries: lambda matrices mus Q matrix entry, integers numbers (1-n) indicate parameter optimized. ml_pars resulting parameter estimates returned instance cla_secsse_ml(), structure param_post. mu_vector previously defined mus - used choose indicator number. max_spec Maximum number species tree (please note tree conditioned number, safeguard generating extremely large trees). min_spec Minimum number species tree. max_species_extant maximum number species counted reconstructed tree (TRUE) complete tree (FALSE). tree_size_hist TRUE, returns vector found tree sizes. optimmethod string method used optimization. Default \"subplex\". Alternative \"simplex\" used normal conditions (debugging). called DDD::optimizer(), simplex implemented natively DDD, subplex ultimately called subplex::subplex(). start_at_crown FALSE, simulation starts one species instead two, resulting crown age lower set crown age. However, facilitates comparison BiSSE facilitates implementing speciation effects crown.","code":""},{"path":"https://rsetienne.github.io/secsse/reference/default_params_doc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Default parameter documentation — default_params_doc","text":"Nothing","code":""},{"path":"https://rsetienne.github.io/secsse/reference/event_times.html","id":null,"dir":"Reference","previous_headings":"","what":"Event times of a (possibly non-ultrametric) phylogenetic tree — event_times","title":"Event times of a (possibly non-ultrametric) phylogenetic tree — event_times","text":"Times speciation extinction occurs","code":""},{"path":"https://rsetienne.github.io/secsse/reference/event_times.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Event times of a (possibly non-ultrametric) phylogenetic tree — event_times","text":"","code":"event_times(phy)"},{"path":"https://rsetienne.github.io/secsse/reference/event_times.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Event times of a (possibly non-ultrametric) phylogenetic tree — event_times","text":"phy phylogenetic tree class phylo, without polytomies, rooted branch lengths. Need ultrametric.","code":""},{"path":"https://rsetienne.github.io/secsse/reference/event_times.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Event times of a (possibly non-ultrametric) phylogenetic tree — event_times","text":"times speciation extinction happens.","code":""},{"path":"https://rsetienne.github.io/secsse/reference/event_times.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Event times of a (possibly non-ultrametric) phylogenetic tree — event_times","text":"script modified BAMMtools' internal function NU.branching.times","code":""},{"path":"https://rsetienne.github.io/secsse/reference/example_phy_GeoSSE.html","id":null,"dir":"Reference","previous_headings":"","what":"A phylogeny with traits at the tips — example_phy_GeoSSE","title":"A phylogeny with traits at the tips — example_phy_GeoSSE","text":"example phylogeny testing purposes","code":""},{"path":"https://rsetienne.github.io/secsse/reference/example_phy_GeoSSE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A phylogeny with traits at the tips — example_phy_GeoSSE","text":"","code":"example_phy_GeoSSE"},{"path":"https://rsetienne.github.io/secsse/reference/example_phy_GeoSSE.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A phylogeny with traits at the tips — example_phy_GeoSSE","text":"phylogeny created GeoSSE (diversitree)","code":""},{"path":"https://rsetienne.github.io/secsse/reference/expand_q_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to expand an existing q_matrix to a number of concealed states — expand_q_matrix","title":"Function to expand an existing q_matrix to a number of concealed states — expand_q_matrix","text":"Function expand existing q_matrix number concealed states","code":""},{"path":"https://rsetienne.github.io/secsse/reference/expand_q_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to expand an existing q_matrix to a number of concealed states — expand_q_matrix","text":"","code":"expand_q_matrix(q_matrix, num_concealed_states, diff.conceal = FALSE)"},{"path":"https://rsetienne.github.io/secsse/reference/expand_q_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to expand an existing q_matrix to a number of concealed states — expand_q_matrix","text":"q_matrix q_matrix transitions observed states. num_concealed_states number concealed states, generally equivalent number examined states dataset. diff.conceal Boolean stating concealed states different. E.g. transition rates concealed states different transition rates examined states. Normally FALSE order avoid huge number parameters.","code":""},{"path":"https://rsetienne.github.io/secsse/reference/expand_q_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to expand an existing q_matrix to a number of concealed states — expand_q_matrix","text":"updated q matrix","code":""},{"path":"https://rsetienne.github.io/secsse/reference/expand_q_matrix.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Function to expand an existing q_matrix to a number of concealed states — expand_q_matrix","text":"highly similar q_doubletrans().","code":""},{"path":"https://rsetienne.github.io/secsse/reference/extract_par_vals.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract parameter values out of the result of a maximum likelihood inference run — extract_par_vals","title":"Extract parameter values out of the result of a maximum likelihood inference run — extract_par_vals","text":"Extract parameter values result maximum likelihood inference run","code":""},{"path":"https://rsetienne.github.io/secsse/reference/extract_par_vals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract parameter values out of the result of a maximum likelihood inference run — extract_par_vals","text":"","code":"extract_par_vals(param_posit, ml_pars)"},{"path":"https://rsetienne.github.io/secsse/reference/extract_par_vals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract parameter values out of the result of a maximum likelihood inference run — extract_par_vals","text":"param_posit initial parameter structure, consisting list three entries: lambda matrices mus Q matrix entry, integers numbers (1-n) indicate parameter optimized. ml_pars resulting parameter estimates returned instance cla_secsse_ml(), structure param_post.","code":""},{"path":"https://rsetienne.github.io/secsse/reference/extract_par_vals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract parameter values out of the result of a maximum likelihood inference run — extract_par_vals","text":"Vector parameter estimates.","code":""},{"path":"https://rsetienne.github.io/secsse/reference/fill_in.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to enter parameter value on their right place — fill_in","title":"Helper function to enter parameter value on their right place — fill_in","text":"Helper function enter parameter value right place","code":""},{"path":"https://rsetienne.github.io/secsse/reference/fill_in.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to enter parameter value on their right place — fill_in","text":"","code":"fill_in(object, params)"},{"path":"https://rsetienne.github.io/secsse/reference/fill_in.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to enter parameter value on their right place — fill_in","text":"object lambda matrices, q_matrix mu vector. params parameters order, value reflects value parameter position, e.g. c(0.3, 0.2, 0.1) fill value 0.3 parameter rate identifier 1, 0.2 parameter rate identifier 2 0.1 parameter rate identifier 3.","code":""},{"path":"https://rsetienne.github.io/secsse/reference/fill_in.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to enter parameter value on their right place — fill_in","text":"lambda matrices, q_matrix mu vector correct values right place.","code":""},{"path":"https://rsetienne.github.io/secsse/reference/id_paramPos.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter structure setting Sets the parameters (speciation, extinction and transition) ids. Needed for ML calculation (secsse_ml()). — id_paramPos","title":"Parameter structure setting Sets the parameters (speciation, extinction and transition) ids. Needed for ML calculation (secsse_ml()). — id_paramPos","text":"Parameter structure setting Sets parameters (speciation, extinction transition) ids. Needed ML calculation (secsse_ml()).","code":""},{"path":"https://rsetienne.github.io/secsse/reference/id_paramPos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parameter structure setting Sets the parameters (speciation, extinction and transition) ids. Needed for ML calculation (secsse_ml()). — id_paramPos","text":"","code":"id_paramPos(traits, num_concealed_states)"},{"path":"https://rsetienne.github.io/secsse/reference/id_paramPos.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter structure setting Sets the parameters (speciation, extinction and transition) ids. Needed for ML calculation (secsse_ml()). — id_paramPos","text":"traits vector trait states tip phylogeny. order states must tree tips. help, see vignette(\"starting_secsse\", package = \"secsse\"). num_concealed_states number concealed states, generally equivalent number examined states dataset.","code":""},{"path":"https://rsetienne.github.io/secsse/reference/id_paramPos.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parameter structure setting Sets the parameters (speciation, extinction and transition) ids. Needed for ML calculation (secsse_ml()). — id_paramPos","text":"list includes ids parameters ML analysis.","code":""},{"path":"https://rsetienne.github.io/secsse/reference/id_paramPos.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parameter structure setting Sets the parameters (speciation, extinction and transition) ids. Needed for ML calculation (secsse_ml()). — id_paramPos","text":"","code":"traits <- sample(c(0,1,2), 45,replace = TRUE) #get some traits num_concealed_states <- 3 param_posit <- id_paramPos(traits,num_concealed_states)"},{"path":"https://rsetienne.github.io/secsse/reference/phylo_vignette.html","id":null,"dir":"Reference","previous_headings":"","what":"A phylogenetic reconstuction to run the vignette — phylo_vignette","title":"A phylogenetic reconstuction to run the vignette — phylo_vignette","text":"example phylogeny right format secsse","code":""},{"path":"https://rsetienne.github.io/secsse/reference/phylo_vignette.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A phylogenetic reconstuction to run the vignette — phylo_vignette","text":"","code":"phylo_vignette"},{"path":"https://rsetienne.github.io/secsse/reference/phylo_vignette.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A phylogenetic reconstuction to run the vignette — phylo_vignette","text":"Phylogenetic tree phy format, rooted, including branch lengths","code":""},{"path":"https://rsetienne.github.io/secsse/reference/plot_state_exact.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the local probability along a tree — plot_state_exact","title":"Plot the local probability along a tree — plot_state_exact","text":"Plot local probability along tree, including branches","code":""},{"path":"https://rsetienne.github.io/secsse/reference/plot_state_exact.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the local probability along a tree — plot_state_exact","text":"","code":"plot_state_exact(   parameters,   phy,   traits,   num_concealed_states,   sampling_fraction,   cond = \"proper_cond\",   root_state_weight = \"proper_weights\",   is_complete_tree = FALSE,   method = \"odeint::bulirsch_stoer\",   atol = 1e-16,   rtol = 1e-16,   num_steps = 100,   prob_func = NULL,   verbose = FALSE )"},{"path":"https://rsetienne.github.io/secsse/reference/plot_state_exact.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the local probability along a tree — plot_state_exact","text":"parameters list first vector represents lambdas, second mus third transition rates. phy phylogenetic tree class phylo, rooted branch lengths. traits vector trait states tip phylogeny. order states must tree tips. help, see vignette(\"starting_secsse\", package = \"secsse\"). num_concealed_states number concealed states, generally equivalent number examined states dataset. sampling_fraction vector states sampling proportion per trait state. must many elements trait states. cond condition existence node root: \"maddison_cond\", \"proper_cond\" (default). details, see vignette. root_state_weight method weigh states: \"maddison_weights\", \"proper_weights\" (default) \"equal_weights\". can also specified root state: vector c(1, 0, 0) indicates state 1 root state. is_complete_tree logical specifying whether tree extinct species provided. set TRUE, also assumes extinct lineages present tree. Defaults FALSE. method integration method used, available : \"odeint::runge_kutta_cash_karp54\", \"odeint::runge_kutta_fehlberg78\", \"odeint::runge_kutta_dopri5\", \"odeint::bulirsch_stoer\" \"odeint::runge_kutta4\". Default method : \"odeint::bulirsch_stoer\". atol numeric specifying absolute tolerance integration. rtol numeric specifying relative tolerance integration. num_steps number substeps show intermediate likelihoods along branch. prob_func function calculate probability interest, see description. verbose sets verbose output; default TRUE optimmethod \"simplex\". optimmethod set \"simplex\", even set FALSE, optimizer output shown.","code":""},{"path":"https://rsetienne.github.io/secsse/reference/plot_state_exact.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the local probability along a tree — plot_state_exact","text":"ggplot2 object","code":""},{"path":"https://rsetienne.github.io/secsse/reference/plot_state_exact.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot the local probability along a tree — plot_state_exact","text":"function evaluate log likelihood locally along branches plot result. num_steps left NULL, likelihood evaluations integration used plotting. may work large trees, may become memory heavy larger trees. Instead, user can indicate number steps, causes probabilities evaluated distinct amount steps along branch (probabilities properly integrated steps). provides approximation, generally results look similar using full evaluation. function used prob_func highly dependent system. instance, 3 observed, 2 hidden states model, probability state prob[1] + prob[2] + prob[3], normalized row sum. prob_func applied row 'states' matrix (can thus test function states matrix returned 'see_ancestral_states = TRUE'). Please note first N columns states matrix extinction rates, (N+1):2N columns belong speciation rates, N = num_obs_states * num_concealed_states. typical prob_func function look like:","code":"my_prob_func <- function(x) {   return(sum(x[5:8]) / sum(x)) }"},{"path":"https://rsetienne.github.io/secsse/reference/plot_state_exact.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the local probability along a tree — plot_state_exact","text":"","code":"set.seed(5) phy <- ape::rphylo(n = 4, birth = 1, death = 0) traits <- c(0, 1, 1, 0) params <- secsse::id_paramPos(c(0, 1), 2) params[[1]][] <- c(0.2, 0.2, 0.1, 0.1) params[[2]][] <- 0.0 params[[3]][, ] <- 0.1 diag(params[[3]]) <- NA #  Thus, we have for both, rates # 0A, 1A, 0B and 1B. If we are interested in the posterior probability of # trait 0,we have to provide a helper function that sums the probabilities of # 0A and 0B, e.g.: helper_function <- function(x) {   return(sum(x[c(5, 7)]) / sum(x)) # normalized by total sum, just in case. }  out_plot <- plot_state_exact(parameters = params,                              phy = phy,                              traits = traits,                              num_concealed_states = 2,                              sampling_fraction = c(1, 1),                              num_steps = 10,                              prob_func = helper_function) #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc."},{"path":"https://rsetienne.github.io/secsse/reference/prepare_full_lambdas.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepares the entire set of lambda matrices for cla_secsse. It provides the set of matrices containing all the speciation rates — prepare_full_lambdas","title":"Prepares the entire set of lambda matrices for cla_secsse. It provides the set of matrices containing all the speciation rates — prepare_full_lambdas","text":"Prepares entire set lambda matrices cla_secsse. provides set matrices containing speciation rates","code":""},{"path":"https://rsetienne.github.io/secsse/reference/prepare_full_lambdas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepares the entire set of lambda matrices for cla_secsse. It provides the set of matrices containing all the speciation rates — prepare_full_lambdas","text":"","code":"prepare_full_lambdas(traits, num_concealed_states, lambd_and_modeSpe)"},{"path":"https://rsetienne.github.io/secsse/reference/prepare_full_lambdas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepares the entire set of lambda matrices for cla_secsse. It provides the set of matrices containing all the speciation rates — prepare_full_lambdas","text":"traits vector trait states tip phylogeny. order states must tree tips. help, see vignette(\"starting_secsse\", package = \"secsse\"). num_concealed_states number concealed states, generally equivalent number examined states dataset. lambd_and_modeSpe matrix 4 models speciation possible.","code":""},{"path":"https://rsetienne.github.io/secsse/reference/prepare_full_lambdas.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepares the entire set of lambda matrices for cla_secsse. It provides the set of matrices containing all the speciation rates — prepare_full_lambdas","text":"list lambdas, length number trait states * num_concealed_states..","code":""},{"path":"https://rsetienne.github.io/secsse/reference/prepare_full_lambdas.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepares the entire set of lambda matrices for cla_secsse. It provides the set of matrices containing all the speciation rates — prepare_full_lambdas","text":"","code":"set.seed(13) phylotree <- ape::rcoal(12, tip.label = 1:12) traits <- sample(c(0, 1, 2),                  ape::Ntip(phylotree), replace = TRUE) num_concealed_states <- 3 # the idparlist for a ETD model (dual state inheritance model of evolution) # would be set like this: idparlist <- secsse::cla_id_paramPos(traits, num_concealed_states) lambd_and_modeSpe <- idparlist$lambdas lambd_and_modeSpe[1, ] <- c(1, 1, 1, 2, 2, 2, 3, 3, 3) idparlist[[1]] <- lambd_and_modeSpe idparlist[[2]][] <- 0 masterBlock <- matrix(4, ncol = 3, nrow = 3, byrow = TRUE) diag(masterBlock) <- NA idparlist[[3]] <- q_doubletrans(traits, masterBlock, diff.conceal = FALSE) # Now, internally, clasecsse sorts the lambda matrices, so they look like #  a list with 9 matrices, corresponding to the 9 states # (0A,1A,2A,0B, etc)  parameter <- idparlist lambda_and_modeSpe <- parameter$lambdas lambda_and_modeSpe[1, ] <- c(0.2, 0.2, 0.2, 0.4, 0.4, 0.4, 0.01, 0.01, 0.01) parameter[[1]] <- prepare_full_lambdas(traits, num_concealed_states,                                        lambda_and_modeSpe)"},{"path":"https://rsetienne.github.io/secsse/reference/q_doubletrans.html","id":null,"dir":"Reference","previous_headings":"","what":"Basic Qmatrix Sets a Q matrix where double transitions are not allowed — q_doubletrans","title":"Basic Qmatrix Sets a Q matrix where double transitions are not allowed — q_doubletrans","text":"function expands Q_matrix, assuming number concealed traits equal number examined traits, different number, consider looking function expand_q_matrix().","code":""},{"path":"https://rsetienne.github.io/secsse/reference/q_doubletrans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Basic Qmatrix Sets a Q matrix where double transitions are not allowed — q_doubletrans","text":"","code":"q_doubletrans(traits, masterBlock, diff.conceal)"},{"path":"https://rsetienne.github.io/secsse/reference/q_doubletrans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Basic Qmatrix Sets a Q matrix where double transitions are not allowed — q_doubletrans","text":"traits vector trait states tip phylogeny. order states must tree tips. help, see vignette(\"starting_secsse\", package = \"secsse\"). masterBlock matrix transitions among examined states, NA main diagonal, used build full transition rates matrix. diff.conceal Boolean stating concealed states different. E.g. transition rates concealed states different transition rates examined states. Normally FALSE order avoid huge number parameters.","code":""},{"path":"https://rsetienne.github.io/secsse/reference/q_doubletrans.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Basic Qmatrix Sets a Q matrix where double transitions are not allowed — q_doubletrans","text":"Q matrix includes examined concealed states, declared third element idparslist.","code":""},{"path":"https://rsetienne.github.io/secsse/reference/q_doubletrans.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Basic Qmatrix Sets a Q matrix where double transitions are not allowed — q_doubletrans","text":"","code":"traits <- sample(c(0,1,2), 45,replace = TRUE) #get some traits # For a three-state trait masterBlock <- matrix(99,ncol = 3,nrow = 3,byrow = TRUE) diag(masterBlock) <- NA masterBlock[1,2] <- 6 masterBlock[1,3] <- 7 masterBlock[2,1] <- 8 masterBlock[2,3] <- 9 masterBlock[3,1] <- 10 masterBlock[3,2] <- 11 myQ <- q_doubletrans(traits,masterBlock,diff.conceal = FALSE) # now, it can replace the Q matrix from id_paramPos num_concealed_states <- 3 param_posit <- id_paramPos(traits,num_concealed_states) param_posit[[3]] <- myQ"},{"path":"https://rsetienne.github.io/secsse/reference/secsse-package.html","id":null,"dir":"Reference","previous_headings":"","what":"secsse: Several Examined and Concealed States-Dependent Speciation and Extinction — secsse-package","title":"secsse: Several Examined and Concealed States-Dependent Speciation and Extinction — secsse-package","text":"Simultaneously infers state-dependent diversification across two states single multiple traits accounting role possible concealed trait. See Herrera-Alsina et al. (2019) doi:10.1093/sysbio/syy057 .","code":""},{"path":[]},{"path":"https://rsetienne.github.io/secsse/reference/secsse-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"secsse: Several Examined and Concealed States-Dependent Speciation and Extinction — secsse-package","text":"Maintainer: Rampal S. Etienne r.s.etienne@rug.nl (ORCID) Authors: Leonel Herrera Alsina leonelhalsina@gmail.com (ORCID) Paul van Els paulvanels@gmail.com (ORCID) contributors: Thijs Janzen t.janzen@rug.nl (ORCID) [contributor] Hanno Hildenbrandt h.hildenbrandt@rug.nl (ORCID) [contributor] Pedro Santos Neves p.m.santos.neves@rug.nl (ORCID) [contributor]","code":""},{"path":"https://rsetienne.github.io/secsse/reference/secsse_loglik.html","id":null,"dir":"Reference","previous_headings":"","what":"Likelihood for SecSSE model Loglikelihood calculation for the SecSSE model given a set of parameters and data — secsse_loglik","title":"Likelihood for SecSSE model Loglikelihood calculation for the SecSSE model given a set of parameters and data — secsse_loglik","text":"Likelihood SecSSE model Loglikelihood calculation SecSSE model given set parameters data","code":""},{"path":"https://rsetienne.github.io/secsse/reference/secsse_loglik.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Likelihood for SecSSE model Loglikelihood calculation for the SecSSE model given a set of parameters and data — secsse_loglik","text":"","code":"secsse_loglik(   parameter,   phy,   traits,   num_concealed_states,   cond = \"proper_cond\",   root_state_weight = \"proper_weights\",   sampling_fraction,   setting_calculation = NULL,   see_ancestral_states = FALSE,   loglik_penalty = 0,   is_complete_tree = FALSE,   num_threads = 1,   atol = 1e-08,   rtol = 1e-07,   method = \"odeint::bulirsch_stoer\" )"},{"path":"https://rsetienne.github.io/secsse/reference/secsse_loglik.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Likelihood for SecSSE model Loglikelihood calculation for the SecSSE model given a set of parameters and data — secsse_loglik","text":"parameter list first vector represents lambdas, second mus third transition rates. phy phylogenetic tree class phylo, rooted branch lengths. traits vector trait states tip phylogeny. order states must tree tips. help, see vignette(\"starting_secsse\", package = \"secsse\"). num_concealed_states number concealed states, generally equivalent number examined states dataset. cond condition existence node root: \"maddison_cond\", \"proper_cond\" (default). details, see vignette. root_state_weight method weigh states: \"maddison_weights\", \"proper_weights\" (default) \"equal_weights\". can also specified root state: vector c(1, 0, 0) indicates state 1 root state. sampling_fraction vector states sampling proportion per trait state. must many elements trait states. setting_calculation argument used internally speed calculation. left blank (default : setting_calculation = NULL). see_ancestral_states Boolean whether ancestral states shown? Defaults FALSE. loglik_penalty size penalty parameters; default 0 (penalty). is_complete_tree logical specifying whether tree extinct species provided. set TRUE, also assumes extinct lineages present tree. Defaults FALSE. num_threads number threads used. Default one thread. atol numeric specifying absolute tolerance integration. rtol numeric specifying relative tolerance integration. method integration method used, available : \"odeint::runge_kutta_cash_karp54\", \"odeint::runge_kutta_fehlberg78\", \"odeint::runge_kutta_dopri5\", \"odeint::bulirsch_stoer\" \"odeint::runge_kutta4\". Default method : \"odeint::bulirsch_stoer\".","code":""},{"path":"https://rsetienne.github.io/secsse/reference/secsse_loglik.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Likelihood for SecSSE model Loglikelihood calculation for the SecSSE model given a set of parameters and data — secsse_loglik","text":"loglikelihood data given parameter.","code":""},{"path":"https://rsetienne.github.io/secsse/reference/secsse_loglik.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Likelihood for SecSSE model Loglikelihood calculation for the SecSSE model given a set of parameters and data — secsse_loglik","text":"","code":"rm(list = ls(all = TRUE)) library(secsse) set.seed(13) phylotree <- ape::rcoal(31, tip.label = 1:31) traits <- sample(c(0,1,2),ape::Ntip(phylotree),replace = TRUE) num_concealed_states <- 2 cond <- \"proper_cond\" root_state_weight <- \"proper_weights\" sampling_fraction <- c(1,1,1) drill <- id_paramPos(traits,num_concealed_states) drill[[1]][] <- c(0.12,0.01,0.2,0.21,0.31,0.23) drill[[2]][] <- 0 drill[[3]][,] <- 0.1 diag(drill[[3]]) <- NA secsse_loglik(parameter = drill, phylotree, traits, num_concealed_states, cond, root_state_weight, sampling_fraction, see_ancestral_states = FALSE) #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> [1] -113.0919  #[1] -113.1018"},{"path":"https://rsetienne.github.io/secsse/reference/secsse_loglik_eval.html","id":null,"dir":"Reference","previous_headings":"","what":"Likelihood for SecSSE model Logikelihood calculation for the SecSSE model given a set of parameters and data, returning also the likelihoods along the branches — secsse_loglik_eval","title":"Likelihood for SecSSE model Logikelihood calculation for the SecSSE model given a set of parameters and data, returning also the likelihoods along the branches — secsse_loglik_eval","text":"Likelihood SecSSE model Logikelihood calculation SecSSE model given set parameters data, returning also likelihoods along branches","code":""},{"path":"https://rsetienne.github.io/secsse/reference/secsse_loglik_eval.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Likelihood for SecSSE model Logikelihood calculation for the SecSSE model given a set of parameters and data, returning also the likelihoods along the branches — secsse_loglik_eval","text":"","code":"secsse_loglik_eval(   parameter,   phy,   traits,   num_concealed_states,   cond = \"proper_cond\",   root_state_weight = \"proper_weights\",   sampling_fraction,   setting_calculation = NULL,   loglik_penalty = 0,   is_complete_tree = FALSE,   num_threads = 1,   atol = 1e-08,   rtol = 1e-07,   method = \"odeint::bulirsch_stoer\",   num_steps = 100 )"},{"path":"https://rsetienne.github.io/secsse/reference/secsse_loglik_eval.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Likelihood for SecSSE model Logikelihood calculation for the SecSSE model given a set of parameters and data, returning also the likelihoods along the branches — secsse_loglik_eval","text":"parameter list first vector represents lambdas, second mus third transition rates. phy phylogenetic tree class phylo, rooted branch lengths. traits vector trait states tip phylogeny. order states must tree tips. help, see vignette(\"starting_secsse\", package = \"secsse\"). num_concealed_states number concealed states, generally equivalent number examined states dataset. cond condition existence node root: \"maddison_cond\", \"proper_cond\" (default). details, see vignette. root_state_weight method weigh states: \"maddison_weights\", \"proper_weights\" (default) \"equal_weights\". can also specified root state: vector c(1, 0, 0) indicates state 1 root state. sampling_fraction vector states sampling proportion per trait state. must many elements trait states. setting_calculation argument used internally speed calculation. left blank (default : setting_calculation = NULL). loglik_penalty size penalty parameters; default 0 (penalty). is_complete_tree logical specifying whether tree extinct species provided. set TRUE, also assumes extinct lineages present tree. Defaults FALSE. num_threads number threads used. Default one thread. atol numeric specifying absolute tolerance integration. rtol numeric specifying relative tolerance integration. method integration method used, available : \"odeint::runge_kutta_cash_karp54\", \"odeint::runge_kutta_fehlberg78\", \"odeint::runge_kutta_dopri5\", \"odeint::bulirsch_stoer\" \"odeint::runge_kutta4\". Default method : \"odeint::bulirsch_stoer\". num_steps number substeps show intermediate likelihoods along branch.","code":""},{"path":"https://rsetienne.github.io/secsse/reference/secsse_loglik_eval.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Likelihood for SecSSE model Logikelihood calculation for the SecSSE model given a set of parameters and data, returning also the likelihoods along the branches — secsse_loglik_eval","text":"list containing: \"output\", observed states along evaluated time points along branches, used plotting. \"states\" ancestral states nodes \"duration\", indicating time taken total evaluation","code":""},{"path":"https://rsetienne.github.io/secsse/reference/secsse_loglik_eval.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Likelihood for SecSSE model Logikelihood calculation for the SecSSE model given a set of parameters and data, returning also the likelihoods along the branches — secsse_loglik_eval","text":"","code":"set.seed(5) phy <- ape::rphylo(n = 4, birth = 1, death = 0) traits <- c(0, 1, 1, 0) params <- secsse::id_paramPos(c(0, 1), 2) params[[1]][] <- c(0.2, 0.2, 0.1, 0.1) params[[2]][] <- 0.0 params[[3]][, ] <- 0.1 diag(params[[3]]) <- NA  secsse_loglik_eval(parameter = params,                    phy = phy,                    traits = traits,                    num_concealed_states = 2,                    sampling_fraction = c(1, 1),                    num_steps = 10) #> Deduced names and order of used states to be: 0, 1 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> $output #>       [,1] [,2]        [,3] [,4] [,5] [,6] [,7]       [,8]       [,9] #>  [1,]    7    1 0.000000000    0    0    0    0 1.00000000 0.00000000 #>  [2,]    7    1 0.049700250    0    0    0    0 0.98037680 0.00975672 #>  [3,]    7    1 0.099400499    0    0    0    0 0.96125773 0.01915438 #>  [4,]    7    1 0.149100749    0    0    0    0 0.94262856 0.02820413 #>  [5,]    7    1 0.198800998    0    0    0    0 0.92447549 0.03691677 #>  [6,]    7    1 0.248501248    0    0    0    0 0.90678511 0.04530280 #>  [7,]    7    1 0.298201497    0    0    0    0 0.88954442 0.05337238 #>  [8,]    7    1 0.347901747    0    0    0    0 0.87274075 0.06113538 #>  [9,]    7    1 0.397601996    0    0    0    0 0.85636185 0.06860137 #> [10,]    7    1 0.447302246    0    0    0    0 0.84039578 0.07577964 #> [11,]    7    1 0.497002495    0    0    0    0 0.82483097 0.08267919 #> [12,]    7    3 0.000000000    0    0    0    0 0.00000000 1.00000000 #> [13,]    7    3 0.049700250    0    0    0    0 0.00975672 0.98037680 #> [14,]    7    3 0.099400499    0    0    0    0 0.01915438 0.96125773 #> [15,]    7    3 0.149100749    0    0    0    0 0.02820413 0.94262856 #> [16,]    7    3 0.198800998    0    0    0    0 0.03691677 0.92447549 #> [17,]    7    3 0.248501248    0    0    0    0 0.04530280 0.90678511 #> [18,]    7    3 0.298201497    0    0    0    0 0.05337238 0.88954442 #> [19,]    7    3 0.347901747    0    0    0    0 0.06113538 0.87274075 #> [20,]    7    3 0.397601996    0    0    0    0 0.06860137 0.85636185 #> [21,]    7    3 0.447302246    0    0    0    0 0.07577964 0.84039578 #> [22,]    7    3 0.497002495    0    0    0    0 0.08267919 0.82483097 #> [23,]    6    2 0.000000000    0    0    0    0 0.00000000 1.00000000 #> [24,]    6    2 0.077391750    0    0    0    0 0.01503639 0.96966295 #> [25,]    6    2 0.154783500    0    0    0    0 0.02921721 0.94052908 #> [26,]    6    2 0.232175250    0    0    0    0 0.04258347 0.91254599 #> [27,]    6    2 0.309566999    0    0    0    0 0.05517431 0.88566364 #> [28,]    6    2 0.386958749    0    0    0    0 0.06702706 0.85983423 #> [29,]    6    2 0.464350499    0    0    0    0 0.07817729 0.83501208 #> [30,]    6    2 0.541742249    0    0    0    0 0.08865896 0.81115355 #> [31,]    6    2 0.619133999    0    0    0    0 0.09850443 0.78821695 #> [32,]    6    2 0.696525749    0    0    0    0 0.10774457 0.76616246 #> [33,]    6    2 0.773917499    0    0    0    0 0.11640881 0.74495202 #> [34,]    6    7 0.000000000    0    0    0    0 0.32533264 0.32533264 #> [35,]    6    7 0.027691500    0    0    0    0 0.32271192 0.32271192 #> [36,]    6    7 0.055383001    0    0    0    0 0.32012191 0.32012191 #> [37,]    6    7 0.083074501    0    0    0    0 0.31756216 0.31756216 #> [38,]    6    7 0.110766001    0    0    0    0 0.31503227 0.31503227 #> [39,]    6    7 0.138457502    0    0    0    0 0.31253180 0.31253180 #> [40,]    6    7 0.166149002    0    0    0    0 0.31006034 0.31006034 #> [41,]    6    7 0.193840502    0    0    0    0 0.30761750 0.30761750 #> [42,]    6    7 0.221532003    0    0    0    0 0.30520286 0.30520286 #> [43,]    6    7 0.249223503    0    0    0    0 0.30281603 0.30281603 #> [44,]    6    7 0.276915003    0    0    0    0 0.30045663 0.30045663 #> [45,]    5    4 0.000000000    0    0    0    0 1.00000000 0.00000000 #> [46,]    5    4 0.080187748    0    0    0    0 0.96858978 0.01556336 #> [47,]    5    4 0.160375497    0    0    0    0 0.93846918 0.03020982 #> [48,]    5    4 0.240563245    0    0    0    0 0.90958007 0.04398490 #> [49,]    5    4 0.320750993    0    0    0    0 0.88186701 0.05693194 #> [50,]    5    4 0.400938741    0    0    0    0 0.85527713 0.06909221 #> [51,]    5    4 0.481126490    0    0    0    0 0.82975999 0.08050499 #> [52,]    5    4 0.561314238    0    0    0    0 0.80526751 0.09120769 #> [53,]    5    4 0.641501986    0    0    0    0 0.78175378 0.10123591 #> [54,]    5    4 0.721689735    0    0    0    0 0.75917506 0.11062355 #> [55,]    5    4 0.801877483    0    0    0    0 0.73748961 0.11940288 #> [56,]    5    6 0.000000000    0    0    0    0 0.10273725 0.65746159 #> [57,]    5    6 0.002795998    0    0    0    0 0.10284434 0.65663886 #> [58,]    5    6 0.005591997    0    0    0    0 0.10295111 0.65581736 #> [59,]    5    6 0.008387995    0    0    0    0 0.10305757 0.65499711 #> [60,]    5    6 0.011183994    0    0    0    0 0.10316371 0.65417809 #> [61,]    5    6 0.013979992    0    0    0    0 0.10326953 0.65336031 #> [62,]    5    6 0.016775991    0    0    0    0 0.10337504 0.65254377 #> [63,]    5    6 0.019571989    0    0    0    0 0.10348024 0.65172845 #> [64,]    5    6 0.022367987    0    0    0    0 0.10358513 0.65091436 #> [65,]    5    6 0.025163986    0    0    0    0 0.10368970 0.65010151 #> [66,]    5    6 0.027959984    0    0    0    0 0.10379396 0.64928987 #>             [,10]       [,11] #>  [1,] 1.000000000 0.000000000 #>  [2,] 0.985237013 0.009780916 #>  [3,] 0.970763781 0.019249183 #>  [4,] 0.956573789 0.028413071 #>  [5,] 0.942660674 0.037280642 #>  [6,] 0.929018225 0.045859752 #>  [7,] 0.915640376 0.054158058 #>  [8,] 0.902521204 0.062183024 #>  [9,] 0.889654925 0.069941924 #> [10,] 0.877035893 0.077441847 #> [11,] 0.864658592 0.084689704 #> [12,] 0.000000000 1.000000000 #> [13,] 0.009780916 0.985237013 #> [14,] 0.019249183 0.970763781 #> [15,] 0.028413071 0.956573789 #> [16,] 0.037280642 0.942660674 #> [17,] 0.045859752 0.929018225 #> [18,] 0.054158058 0.915640376 #> [19,] 0.062183024 0.902521204 #> [20,] 0.069941924 0.889654925 #> [21,] 0.077441847 0.877035893 #> [22,] 0.084689704 0.864658592 #> [23,] 0.000000000 1.000000000 #> [24,] 0.015094388 0.977137634 #> [25,] 0.029441848 0.954969055 #> [26,] 0.043072947 0.933470146 #> [27,] 0.056017056 0.912617668 #> [28,] 0.068302395 0.892389228 #> [29,] 0.079956077 0.872763249 #> [30,] 0.091004153 0.853718938 #> [31,] 0.101471650 0.835236258 #> [32,] 0.111382616 0.817295901 #> [33,] 0.120760151 0.799879260 #> [34,] 0.174667355 0.174667355 #> [35,] 0.175009400 0.175009400 #> [36,] 0.175334247 0.175334247 #> [37,] 0.175642204 0.175642204 #> [38,] 0.175933579 0.175933579 #> [39,] 0.176208671 0.176208671 #> [40,] 0.176467777 0.176467777 #> [41,] 0.176711188 0.176711188 #> [42,] 0.176939189 0.176939189 #> [43,] 0.177152064 0.177152064 #> [44,] 0.177350089 0.177350089 #> [45,] 1.000000000 0.000000000 #> [46,] 0.976324799 0.015625549 #> [47,] 0.953393474 0.030450425 #> [48,] 0.931179252 0.044508557 #> [49,] 0.909656370 0.057832498 #> [50,] 0.888800036 0.070453481 #> [51,] 0.868586391 0.082401469 #> [52,] 0.848992477 0.093705212 #> [53,] 0.829996198 0.104392289 #> [54,] 0.811576291 0.114489160 #> [55,] 0.793712291 0.124021207 #> [56,] 0.031454686 0.208346471 #> [57,] 0.031690079 0.208334742 #> [58,] 0.031925006 0.208322892 #> [59,] 0.032159467 0.208310921 #> [60,] 0.032393463 0.208298830 #> [61,] 0.032626995 0.208286618 #> [62,] 0.032860064 0.208274287 #> [63,] 0.033092671 0.208261835 #> [64,] 0.033324815 0.208249265 #> [65,] 0.033556499 0.208236575 #> [66,] 0.033787722 0.208223766 #>  #> $states #>      [,1] [,2] [,3] [,4]      [,5]      [,6]       [,7]       [,8] #> [1,]    0    0    0    0 1.0000000 0.0000000 1.00000000 0.00000000 #> [2,]    0    0    0    0 0.0000000 1.0000000 0.00000000 1.00000000 #> [3,]    0    0    0    0 0.0000000 1.0000000 0.00000000 1.00000000 #> [4,]    0    0    0    0 1.0000000 0.0000000 1.00000000 0.00000000 #> [5,]    0    0    0    0 0.4243298 0.4297629 0.07433059 0.07157672 #> [6,]    0    0    0    0 0.1027372 0.6574616 0.03145469 0.20834647 #> [7,]    0    0    0    0 0.3253326 0.3253326 0.17466736 0.17466736 #>  #> $duration #> [1] 0.000278908 #>"},{"path":"https://rsetienne.github.io/secsse/reference/secsse_ml.html","id":null,"dir":"Reference","previous_headings":"","what":"Maximum likehood estimation for (SecSSE) — secsse_ml","title":"Maximum likehood estimation for (SecSSE) — secsse_ml","text":"Maximum likehood estimation Several examined concealed States-dependent Speciation Extinction (SecSSE)","code":""},{"path":"https://rsetienne.github.io/secsse/reference/secsse_ml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Maximum likehood estimation for (SecSSE) — secsse_ml","text":"","code":"secsse_ml(   phy,   traits,   num_concealed_states,   idparslist,   idparsopt,   initparsopt,   idparsfix,   parsfix,   cond = \"proper_cond\",   root_state_weight = \"proper_weights\",   sampling_fraction,   tol = c(1e-04, 1e-05, 1e-07),   maxiter = 1000 * round((1.25)^length(idparsopt)),   optimmethod = \"subplex\",   num_cycles = 1,   loglik_penalty = 0,   is_complete_tree = FALSE,   verbose = (optimmethod == \"simplex\"),   num_threads = 1,   atol = 1e-08,   rtol = 1e-07,   method = \"odeint::bulirsch_stoer\" )"},{"path":"https://rsetienne.github.io/secsse/reference/secsse_ml.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Maximum likehood estimation for (SecSSE) — secsse_ml","text":"phy phylogenetic tree class phylo, rooted branch lengths. traits vector trait states tip phylogeny. order states must tree tips. help, see vignette(\"starting_secsse\", package = \"secsse\"). num_concealed_states number concealed states, generally equivalent number examined states dataset. idparslist overview parameters values. idparsopt numeric vector ID parameters estimated. initparsopt numeric vector initial guess parameters estimated. idparsfix numeric vector ID fixed parameters. parsfix numeric vector value fixed parameters. cond condition existence node root: \"maddison_cond\", \"proper_cond\" (default). details, see vignette. root_state_weight method weigh states: \"maddison_weights\", \"proper_weights\" (default) \"equal_weights\". can also specified root state: vector c(1, 0, 0) indicates state 1 root state. sampling_fraction vector states sampling proportion per trait state. must many elements trait states. tol numeric vector maximum tolerance optimization algorithm. Default c(1e-04, 1e-05, 1e-05). maxiter max number iterations. Default 1000 * round((1.25) ^ length(idparsopt)). optimmethod string method used optimization. Default \"subplex\". Alternative \"simplex\" used normal conditions (debugging). called DDD::optimizer(), simplex implemented natively DDD, subplex ultimately called subplex::subplex(). num_cycles Number cycles optimization. set Inf, optimization repeated result , within tolerance, equal starting values, maximum 10 cycles. loglik_penalty size penalty parameters; default 0 (penalty). is_complete_tree logical specifying whether tree extinct species provided. set TRUE, also assumes extinct lineages present tree. Defaults FALSE. verbose sets verbose output; default TRUE optimmethod \"simplex\". optimmethod set \"simplex\", even set FALSE, optimizer output shown. num_threads number threads used. Default one thread. atol numeric specifying absolute tolerance integration. rtol numeric specifying relative tolerance integration. method integration method used, available : \"odeint::runge_kutta_cash_karp54\", \"odeint::runge_kutta_fehlberg78\", \"odeint::runge_kutta_dopri5\", \"odeint::bulirsch_stoer\" \"odeint::runge_kutta4\". Default method : \"odeint::bulirsch_stoer\".","code":""},{"path":"https://rsetienne.github.io/secsse/reference/secsse_ml.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Maximum likehood estimation for (SecSSE) — secsse_ml","text":"Parameter estimated maximum likelihood","code":""},{"path":"https://rsetienne.github.io/secsse/reference/secsse_ml.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Maximum likehood estimation for (SecSSE) — secsse_ml","text":"","code":"# Example of how to set the arguments for a ML search. library(secsse) library(DDD) set.seed(13) # lambdas for 0A and 1A and 2A are the same but need to be estimated # mus are fixed to # the transition rates are constrained to be equal and fixed 0.01 phylotree <- ape::rcoal(31, tip.label = 1:31) traits <-  sample(c(0,1,2), ape::Ntip(phylotree),replace=TRUE)#get some traits num_concealed_states<-3 idparslist <- id_paramPos(traits, num_concealed_states) idparslist[[1]][c(1,4,7)] <- 1 idparslist[[1]][c(2,5,8)] <- 2 idparslist[[1]][c(3,6,9)] <- 3 idparslist[[2]][]<-4 masterBlock <- matrix(5,ncol = 3,nrow = 3,byrow = TRUE) diag(masterBlock) <- NA diff.conceal <- FALSE idparslist[[3]] <- q_doubletrans(traits,masterBlock,diff.conceal) startingpoint <- DDD::bd_ML(brts = ape::branching.times(phylotree)) #> You are optimizing lambda0 mu0  #> You are fixing lambda1 mu1  #> Optimizing the likelihood - this may take a while.  #> The loglikelihood for the initial parameter values is -67.5669039297515. #>  #> Maximum likelihood parameter estimates: lambda0: 15.604290, mu0: 15.874464, lambda1: 0.000000, mu1: 0.000000:  #> Maximum loglikelihood: 25.282018 intGuessLamba <- startingpoint$lambda0 intGuessMu <- startingpoint$mu0 idparsopt <- c(1,2,3,5) initparsopt <- c(rep(intGuessLamba,3),rep((intGuessLamba/5),1)) idparsfix <- c(0,4) parsfix <- c(0,0) tol <- c(1e-02, 1e-03, 1e-04) maxiter <- 1000 * round((1.25)^length(idparsopt)) optimmethod <- 'subplex' cond <- 'proper_cond' root_state_weight <- 'proper_weights' sampling_fraction <- c(1,1,1) model<-secsse_ml( phylotree, traits, num_concealed_states, idparslist, idparsopt, initparsopt, idparsfix, parsfix, cond, root_state_weight, sampling_fraction, tol, maxiter, optimmethod, num_cycles = 1, verbose = FALSE) #> Warning: Note: you set some transitions as impossible to happen. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. # model$ML # [1] -16.04127"},{"path":"https://rsetienne.github.io/secsse/reference/secsse_ml_func_def_pars.html","id":null,"dir":"Reference","previous_headings":"","what":"Maximum likehood estimation for (SecSSE) with parameter as complex functions. — secsse_ml_func_def_pars","title":"Maximum likehood estimation for (SecSSE) with parameter as complex functions. — secsse_ml_func_def_pars","text":"Maximum likehood estimation Several examined concealed States-dependent Speciation Extinction (SecSSE) paramaters functions parameters /factors.","code":""},{"path":"https://rsetienne.github.io/secsse/reference/secsse_ml_func_def_pars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Maximum likehood estimation for (SecSSE) with parameter as complex functions. — secsse_ml_func_def_pars","text":"","code":"secsse_ml_func_def_pars(   phy,   traits,   num_concealed_states,   idparslist,   idparsopt,   initparsopt,   idfactorsopt,   initfactors,   idparsfix,   parsfix,   idparsfuncdefpar,   functions_defining_params = NULL,   cond = \"proper_cond\",   root_state_weight = \"proper_weights\",   sampling_fraction,   tol = c(1e-04, 1e-05, 1e-07),   maxiter = 1000 * round((1.25)^length(idparsopt)),   optimmethod = \"subplex\",   num_cycles = 1,   loglik_penalty = 0,   is_complete_tree = FALSE,   num_threads = 1,   atol = 1e-08,   rtol = 1e-06,   method = \"odeint::bulirsch_stoer\" )"},{"path":"https://rsetienne.github.io/secsse/reference/secsse_ml_func_def_pars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Maximum likehood estimation for (SecSSE) with parameter as complex functions. — secsse_ml_func_def_pars","text":"phy phylogenetic tree class phylo, rooted branch lengths. traits vector trait states tip phylogeny. order states must tree tips. help, see vignette(\"starting_secsse\", package = \"secsse\"). num_concealed_states number concealed states, generally equivalent number examined states dataset. idparslist overview parameters values. idparsopt numeric vector ID parameters estimated. initparsopt numeric vector initial guess parameters estimated. idfactorsopt id factors optimized. fixed factors, use constant within functions_defining_params. initfactors initial guess factor (set NULL factors). idparsfix numeric vector ID fixed parameters. parsfix numeric vector value fixed parameters. idparsfuncdefpar id parameters function optimized /fixed parameters. order id match functions_defining_params. functions_defining_params list functions. element function defines parameter e.g. id_3 <- (id_1 + id_2) / 2. See example. cond condition existence node root: \"maddison_cond\", \"proper_cond\" (default). details, see vignette. root_state_weight method weigh states: \"maddison_weights\", \"proper_weights\" (default) \"equal_weights\". can also specified root state: vector c(1, 0, 0) indicates state 1 root state. sampling_fraction vector states sampling proportion per trait state. must many elements trait states. tol numeric vector maximum tolerance optimization algorithm. Default c(1e-04, 1e-05, 1e-05). maxiter max number iterations. Default 1000 * round((1.25) ^ length(idparsopt)). optimmethod string method used optimization. Default \"subplex\". Alternative \"simplex\" used normal conditions (debugging). called DDD::optimizer(), simplex implemented natively DDD, subplex ultimately called subplex::subplex(). num_cycles Number cycles optimization. set Inf, optimization repeated result , within tolerance, equal starting values, maximum 10 cycles. loglik_penalty size penalty parameters; default 0 (penalty). is_complete_tree logical specifying whether tree extinct species provided. set TRUE, also assumes extinct lineages present tree. Defaults FALSE. num_threads number threads used. Default one thread. atol numeric specifying absolute tolerance integration. rtol numeric specifying relative tolerance integration. method integration method used, available : \"odeint::runge_kutta_cash_karp54\", \"odeint::runge_kutta_fehlberg78\", \"odeint::runge_kutta_dopri5\", \"odeint::bulirsch_stoer\" \"odeint::runge_kutta4\". Default method : \"odeint::bulirsch_stoer\".","code":""},{"path":"https://rsetienne.github.io/secsse/reference/secsse_ml_func_def_pars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Maximum likehood estimation for (SecSSE) with parameter as complex functions. — secsse_ml_func_def_pars","text":"Parameter estimated maximum likelihood","code":""},{"path":"https://rsetienne.github.io/secsse/reference/secsse_ml_func_def_pars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Maximum likehood estimation for (SecSSE) with parameter as complex functions. — secsse_ml_func_def_pars","text":"","code":"# Example of how to set the arguments for a ML search. rm(list=ls(all=TRUE)) library(secsse) library(DDD) set.seed(16) phylotree <- ape::rbdtree(0.07,0.001,Tmax=50) startingpoint<-bd_ML(brts = ape::branching.times(phylotree)) #> You are optimizing lambda0 mu0  #> You are fixing lambda1 mu1  #> Optimizing the likelihood - this may take a while.  #> The loglikelihood for the initial parameter values is -106.425581129189. #>  #> Maximum likelihood parameter estimates: lambda0: 0.056537, mu0: 0.000000, lambda1: 0.000000, mu1: 0.000000:  #> Maximum loglikelihood: -104.592844 intGuessLamba <- startingpoint$lambda0 intGuessMu <- startingpoint$mu0 traits <- sample(c(0,1,2), ape::Ntip(phylotree),replace=TRUE) #get some traits num_concealed_states<-3 idparslist<-id_paramPos(traits, num_concealed_states) idparslist[[1]][c(1,4,7)] <- 1 idparslist[[1]][c(2,5,8)] <- 2 idparslist[[1]][c(3,6,9)] <- 3 idparslist[[2]][] <- 4 masterBlock <- matrix(c(5,6,5,6,5,6,5,6,5),ncol = 3,nrow = 3,byrow = TRUE) diag(masterBlock) <- NA diff.conceal <- FALSE idparslist[[3]] <- q_doubletrans(traits,masterBlock,diff.conceal) idparsfuncdefpar <- c(3,5,6) idparsopt <- c(1,2) idparsfix <- c(0,4) initparsopt <- c(rep(intGuessLamba,2)) parsfix <- c(0,0) idfactorsopt <- 1 initfactors <- 4 # functions_defining_params is a list of functions. Each function has no # arguments and to refer # to parameters ids should be indicated as \"par_\" i.e. par_3 refers to # parameter 3. When a function is defined, be sure that all the parameters # involved are either estimated, fixed or # defined by previous functions (i.e, a function that defines parameter in # 'functions_defining_params'). The user is responsible for this. In this # exampl3, par_3 (i.e., parameter 3) is needed to calculate par_6. This is # correct because par_3 is defined in # the first function of 'functions_defining_params'. Notice that factor_1 # indicates a value that will be estimated to satisfy the equation. The same # factor can be shared to define several parameters. functions_defining_params <- list() functions_defining_params[[1]] <- function(){  par_3 <- par_1 + par_2 } functions_defining_params[[2]] <- function(){  par_5 <- par_1 * factor_1 } functions_defining_params[[3]] <- function(){  par_6 <- par_3 * factor_1 }  tol = c(1e-02, 1e-03, 1e-04) maxiter = 1000 * round((1.25)^length(idparsopt)) optimmethod = \"subplex\" cond<-\"proper_cond\" root_state_weight <- \"proper_weights\" sampling_fraction <- c(1,1,1) model <- secsse_ml_func_def_pars(phylotree, traits, num_concealed_states, idparslist, idparsopt, initparsopt, idfactorsopt, initfactors, idparsfix, parsfix, idparsfuncdefpar, functions_defining_params, cond, root_state_weight, sampling_fraction, tol, maxiter, optimmethod, num_cycles = 1) #> Warning: Note: you set some transitions as impossible to happen. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. #> Deduced names and order of used states to be: 0, 1, 2 #> if this is incorrect, consider passing states as matching numeric  #> ordering, e.g. 1 for the first state, 2 for the second etc. # ML -136.5796"},{"path":"https://rsetienne.github.io/secsse/reference/secsse_sim.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to simulate a tree, conditional on observing all states. — secsse_sim","title":"Function to simulate a tree, conditional on observing all states. — secsse_sim","text":"default, secsse_sim assumes CLA-secsse simulation, e.g. inheritance traits speciation need symmetrical, can specified usage lambda-matrices. Hence, input lambdas typically list matrices. Simulation performed randomly sampled initial trait crown - , however - want specific, single, trait used crown, can reduce possible traits modifying pool_init_states. default, algorithm keeps simulating generates tree crown lineages survive present - ensure tree crown age matches used crown age. can modify 'non-extinction' deviate behaviour.","code":""},{"path":"https://rsetienne.github.io/secsse/reference/secsse_sim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to simulate a tree, conditional on observing all states. — secsse_sim","text":"","code":"secsse_sim(   lambdas,   mus,   qs,   crown_age,   num_concealed_states,   pool_init_states = NULL,   max_spec = 1e+05,   min_spec = 2,   max_species_extant = TRUE,   tree_size_hist = FALSE,   conditioning = \"obs_states\",   non_extinction = TRUE,   verbose = FALSE,   max_tries = 1e+06,   drop_extinct = TRUE,   start_at_crown = TRUE,   seed = NULL )"},{"path":"https://rsetienne.github.io/secsse/reference/secsse_sim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to simulate a tree, conditional on observing all states. — secsse_sim","text":"lambdas speciation rates, form list matrices. mus extinction rates, form vector. qs Q matrix, example result function q_doubletrans, generally form matrix. crown_age crown age tree, tree simulated conditional non-extinction crown age. num_concealed_states number concealed states, generally equivalent number examined states dataset. pool_init_states pool initial states crown, case different available states, otherwise leave NULL max_spec Maximum number species tree (please note tree conditioned number, safeguard generating extremely large trees). min_spec Minimum number species tree. max_species_extant maximum number species counted reconstructed tree (TRUE) complete tree (FALSE). tree_size_hist TRUE, returns vector found tree sizes. conditioning can \"obs_states\", \"true_states\" \"none\", tree simulated one generated contains observed states (\"obs_states\"), true states (e.g. combinations obs hidden states), always returned (\"none\"). Alternatively, vector names required observed states can provided, e.g. c(\"S\", \"N\"). non_extinction boolean stating tree conditioned non-extinction crown lineages. Defaults TRUE. verbose sets verbose output; default TRUE optimmethod \"simplex\". optimmethod set \"simplex\", even set FALSE, optimizer output shown. max_tries maximum number simulations try obtain tree. drop_extinct boolean stating extinct species dropped tree. Defaults TRUE. start_at_crown FALSE, simulation starts one species instead two, resulting crown age lower set crown age. However, facilitates comparison BiSSE facilitates implementing speciation effects crown. seed pseudo-random number generator seed.","code":""},{"path":"https://rsetienne.github.io/secsse/reference/secsse_sim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to simulate a tree, conditional on observing all states. — secsse_sim","text":"list four properties: phy: reconstructed phylogeny, true_traits: true traits order tip label, obs_traits: observed traits, ignoring hidden traits lastly: initialState, delineating initial state root used.","code":""},{"path":"https://rsetienne.github.io/secsse/reference/sortingtraits.html","id":null,"dir":"Reference","previous_headings":"","what":"Data checking and trait sorting In preparation for likelihood calculation, it orders trait data according the tree tips — sortingtraits","title":"Data checking and trait sorting In preparation for likelihood calculation, it orders trait data according the tree tips — sortingtraits","text":"Data checking trait sorting preparation likelihood calculation, orders trait data according tree tips","code":""},{"path":"https://rsetienne.github.io/secsse/reference/sortingtraits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data checking and trait sorting In preparation for likelihood calculation, it orders trait data according the tree tips — sortingtraits","text":"","code":"sortingtraits(trait_info, phy)"},{"path":"https://rsetienne.github.io/secsse/reference/sortingtraits.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data checking and trait sorting In preparation for likelihood calculation, it orders trait data according the tree tips — sortingtraits","text":"trait_info data frame first column species ids second one trait associated information. phy phylogenetic tree class phylo, rooted branch lengths.","code":""},{"path":"https://rsetienne.github.io/secsse/reference/sortingtraits.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Data checking and trait sorting In preparation for likelihood calculation, it orders trait data according the tree tips — sortingtraits","text":"Vector traits","code":""},{"path":"https://rsetienne.github.io/secsse/reference/sortingtraits.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data checking and trait sorting In preparation for likelihood calculation, it orders trait data according the tree tips — sortingtraits","text":"","code":"# Some data we have prepared data(traits) data('phylo_vignette') traits <- sortingtraits(traits, phylo_vignette)"},{"path":"https://rsetienne.github.io/secsse/reference/traits.html","id":null,"dir":"Reference","previous_headings":"","what":"A table with trait info to run the vignette — traits","title":"A table with trait info to run the vignette — traits","text":"example trait information right format secsse","code":""},{"path":"https://rsetienne.github.io/secsse/reference/traits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A table with trait info to run the vignette — traits","text":"","code":"traits"},{"path":"https://rsetienne.github.io/secsse/reference/traits.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A table with trait info to run the vignette — traits","text":"data frame species trait state associated","code":""}]
